{"version":3,"sources":["types.ts","quiz.ts","data/phonemes.ts","constants.ts","utils/index.ts","search.ts","components/Footer.tsx","components/Mission.tsx","components/Tooltip.tsx","components/PhonemesTable.tsx","components/Vowels.tsx","components/Phonemes.tsx","components/Diphthongs.tsx","components/Stress.tsx","components/Consonants.tsx","components/Intonation.tsx","components/ArrowWord.tsx","components/IntonationQuizLinks.tsx","components/Falling.tsx","components/Rising.tsx","components/NonFinal.tsx","components/Breadcrumbs.tsx","components/QuizCarousel.tsx","components/Card.tsx","components/Home.tsx","components/ContactForm.tsx","components/AboutAuthor.tsx","components/DropdownItem.tsx","components/NavBar.tsx","components/MobileDropdownItem.tsx","components/MobileNavBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NavHover","QuizIndex","quizSynopsis","commonQuestionProps","question","questionType","answerSelectionType","point","defaultLocale","landingHeaderText","startQuizBtn","resultFilterAll","resultFilterCorrect","resultFilterIncorrect","nextQuestionBtn","resultPageHeaderText","resultPagePoint","singleSelectionTagText","multipleSelectionTagText","pickNumberOfSelection","quiz","appLocale","quizTitle","questions","answers","correctAnswer","messageForCorrectAnswer","messageForIncorrectAnswer","explanation","commonQuestionStressProps","quizStress","commonQuestionIntonationProps","quizIntonation","commonQuestionIntonationBisProps","quizIntonationBis","customQuiz","customQuizStress","defaultCustomQuizStressAnswers","defaultCustomQuizAnswers","correctCustomQuizAnswers","map","c","diphthongs","phoneme","graphemes","examples","audioPhoneme","audioExamples","consonants","vowels","AUTHOR_FULLNAME","BASE_PATH","BASE_PATH_IMG","BASE_PATH_SOUNDS","EMAIL","IPA_DEFINITION","titleize","word","capitalLetter","charAt","toUpperCase","length","slice","createBreadcrumb","page","anchor","title","generateBreadcrumbs","indexCarousel","currentPage","home","phonemes","intonation","quizParentBreadcrumb","GuessThePattern","OddPhonemeOut","PhoneticSpelling","SameWordsDifferentStress","ShoppingForAPresent","WhereIsTheStress","stress","getQuizParentBreadcrumb","typesSounds","data","flatten","d","replace","split","sanitizeExamples","filter","example","consonantsKeysExamples","diphthongsKeysExamples","vowelsKeysExamples","sanitizePhoneme","mappingPhoneme","keywords","mapping","toLowerCase","Footer","_props","className","target","rel","href","Mission","src","alt","Tooltip","props","definition","OverlayTrigger","key","placement","overlay","id","PhonemesTable","audioPhonemeObj","Audio","audioExamplesObj","examplesSplit","onClick","play","index","dangerouslySetInnerHTML","__html","Vowels","setPageAndClear","Phonemes","Diphthongs","Stress","setIndexCarousel","audioPresent","audioReject","audioConduct","Consonants","Intonation","audioTest1","audioTest2","ArrowWord","isUp","arrow","IntonationQuizLinks","Falling","Rising","NonFinal","Breadcrumbs","breadcrumbs","Breadcrumb","breadcrumb","Item","active","QuizCarousel","Carousel","activeIndex","onSelect","selectedIndex","interval","Card","description","Body","Text","Title","Button","variant","Home","isMobile","CardDeck","ContactForm","React","emailBody","setEmailBody","emailSubject","setEmailSubject","buttonRequest","encodeURIComponent","Form","Group","controlId","Label","Control","onChange","e","value","type","placeholder","as","rows","window","open","AboutAuthor","DropdownItem","Dropdown","NavBar","navHovered","setNavHovered","isAuthorHovered","Author","isIntonationHovered","isPhonemesHovered","onMouseEnter","onMouseLeave","undefined","show","Toggle","Menu","Nav","Link","MobileDropdownItem","NavDropdown","MobileNavBar","Navbar","sticky","collapseOnSelect","expand","bg","Brand","aria-controls","Collapse","Divider","App","quizLastIndex","search","setSearch","matches","setMatches","hash","location","substring","setPage","quizAnswers","setQuizAnswers","quizStressAnswers","setQuizStressAnswers","quizScore","setQuizScore","quizStressScore","setQuizStressScore","quizStressTotal","setQuizStressTotal","onhashchange","integrity","data-cross-origin","inline","FormControl","onKeyPress","keyCode","which","includes","preventDefault","input","inputLowercase","newMatches","forEach","mappingElement","matchKey","find","k","push","keyword","sortedNewMatches","sort","a","b","aKeyword","bKeyword","uniqNewMatches","uniqBy","m","matchesLinks","renderMatches","previousQuizClasses","classnames","nextQuizClasses","showInstantFeedback","currentValue","toLocaleLowerCase","trim","classNames","maxLength","newQuizAnswers","score","correct","everythingAnswered","audioStress","isDisabled","classNameButton1","classNameButton2","disabled","newQuizStressAnswers","isCorrectAnswer","renderCustomQuizStress","renderBody","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2debbce6.chunk.js","sourcesContent":["export interface Pronunciation {\n  phoneme: string;\n  graphemes: string;\n  examples: string;\n  audioPhoneme: string;\n  audioExamples: string;\n}\n\nexport enum NavHover {\n  Author = 'author',\n  Phonemes = 'phonemes',\n  Intonation = 'intonation'\n}\n\nexport interface Search {\n  keywords: string[];\n  anchor: string;\n  title: string;\n}\n\nexport interface SearchMatch {\n  keyword: string;\n  anchor: string;\n  title: string;\n}\n\nexport interface Breadcrumb {\n  anchor: string;\n  title: string;\n}\n\nexport enum QuizIndex {\n  OddPhonemeOut = 0,\n  PhoneticSpelling = 1,\n  SameWordsDifferentStress = 2,\n  WhereIsTheStress = 3,\n  GuessThePattern = 4,\n  ShoppingForAPresent = 5\n}\n","const quizSynopsis = `Choose the word that has a different phoneme from the rest.`;\nconst commonQuestionProps = {\n  question: quizSynopsis,\n  questionType: 'text',\n  answerSelectionType: 'single',\n  point: '20'\n};\n\nexport const defaultLocale = {\n  landingHeaderText: '<questionLength> Questions',\n  question: 'Question',\n  startQuizBtn: 'Start Quiz',\n  resultFilterAll: 'All',\n  resultFilterCorrect: 'Correct',\n  resultFilterIncorrect: 'Incorrect',\n  nextQuestionBtn: 'Next',\n  resultPageHeaderText: 'You got <correctIndexLength> out of <questionLength> questions right.',\n  resultPagePoint: '',\n  singleSelectionTagText: 'Single Selection',\n  multipleSelectionTagText: 'Multiple Selection',\n  pickNumberOfSelection: 'Pick <numberOfSelection>'\n};\n\nexport const quiz = {\n  appLocale: {\n    ...defaultLocale\n  },\n  quizTitle: 'Odd Phoneme Out',\n  quizSynopsis,\n  questions: [\n    {\n      ...commonQuestionProps,\n      answers: ['bread', 'seed', 'reads', 'green'],\n      correctAnswer: '1',\n      messageForCorrectAnswer: 'bread: /e/',\n      messageForIncorrectAnswer: 'seed, reads, green: /iː/',\n      explanation: 'TODO'\n    },\n    {\n      ...commonQuestionProps,\n      answers: ['pace', 'neighs', 'gray', 'key'],\n      correctAnswer: '4',\n      messageForCorrectAnswer: 'key: /iː/',\n      messageForIncorrectAnswer: 'pace, neighs, gray: /eɪ/',\n      explanation: 'TODO'\n    },\n    {\n      ...commonQuestionProps,\n      answers: ['sew', 'through', 'brew', 'blue'],\n      correctAnswer: '1',\n      messageForCorrectAnswer: 'sew: /oʊ/',\n      messageForIncorrectAnswer: 'through, brew, blue: /uː/',\n      explanation: 'TODO'\n    },\n    {\n      ...commonQuestionProps,\n      answers: ['eight', 'ant', 'aim', 'age'],\n      correctAnswer: '2',\n      messageForCorrectAnswer: 'ant: /æ',\n      messageForIncorrectAnswer: 'eight, aim, age: /eɪ/',\n      explanation: 'TODO'\n    },\n    {\n      ...commonQuestionProps,\n      answers: ['thick', 'then', 'third', 'through'],\n      correctAnswer: '2',\n      messageForCorrectAnswer: 'then: /ð/',\n      messageForIncorrectAnswer: 'thick, third, through: /θ/',\n      explanation: 'TODO'\n    },\n    {\n      ...commonQuestionProps,\n      answers: ['climb', 'fry', 'light', 'tray'],\n      correctAnswer: '4',\n      messageForCorrectAnswer: 'tray: /eɪ/',\n      messageForIncorrectAnswer: 'climb, fry, light: /aɪ/',\n      explanation: 'TODO'\n    },\n    {\n      ...commonQuestionProps,\n      answers: ['brow', 'crown', 'throw', 'meow'],\n      correctAnswer: '3',\n      messageForCorrectAnswer: 'throw: /oʊ/',\n      messageForIncorrectAnswer: 'brow, crown, meow: /aʊ/',\n      explanation: 'TODO'\n    },\n    {\n      ...commonQuestionProps,\n      answers: ['mission', 'precision', 'vision', 'version'],\n      correctAnswer: '1',\n      messageForCorrectAnswer: 'mission: /ʃ/',\n      messageForIncorrectAnswer: 'precision, vision, version: /ʒ/',\n      explanation: 'TODO'\n    }\n  ]\n};\n\nconst commonQuestionStressProps = {\n  questionType: 'text',\n  answerSelectionType: 'single',\n  point: '20',\n  explanation: 'TODO'\n};\n\nexport const quizStress = {\n  appLocale: {\n    ...defaultLocale\n  },\n  quizTitle: '',\n  quizSynopsis: '',\n  questions: [\n    {\n      ...commonQuestionStressProps,\n      question: 'Apartment',\n      answers: ['A', 'part', 'ment', 'No stress'],\n      correctAnswer: '2',\n      messageForCorrectAnswer: 'a PART ment',\n      messageForIncorrectAnswer: 'a PART ment'\n    },\n    {\n      ...commonQuestionStressProps,\n      question: 'Respond',\n      answers: ['Re', 'spond', 'No stress'],\n      correctAnswer: '2',\n      messageForCorrectAnswer: 're SPOND',\n      messageForIncorrectAnswer: 're SPOND'\n    },\n    {\n      ...commonQuestionStressProps,\n      question: 'Positivity',\n      answers: ['Po', 'si', 'ti', 'vi', 'ty', 'No stress'],\n      correctAnswer: '3',\n      messageForCorrectAnswer: 'po si TI vi ty',\n      messageForIncorrectAnswer: 'po si TI vi ty'\n    },\n    {\n      ...commonQuestionStressProps,\n      question: 'Computer',\n      answers: ['Com', 'pu', 'ter', 'No stress'],\n      correctAnswer: '2',\n      messageForCorrectAnswer: 'com PU ter',\n      messageForIncorrectAnswer: 'com PU ter'\n    },\n    {\n      ...commonQuestionStressProps,\n      question: 'Bakery',\n      answers: ['Ba', 'ke', 'ry', 'No stress'],\n      correctAnswer: '1',\n      messageForCorrectAnswer: 'BA ke ry',\n      messageForIncorrectAnswer: 'BA ke ry'\n    },\n    {\n      ...commonQuestionStressProps,\n      question: 'Honorable',\n      answers: ['Ho', 'no', 'ra', 'ble', 'No stress'],\n      correctAnswer: '1',\n      messageForCorrectAnswer: 'HO no ra ble',\n      messageForIncorrectAnswer: 'HO no ra ble'\n    },\n    {\n      ...commonQuestionStressProps,\n      question: 'Scientific',\n      answers: ['Sci', 'en', 'ti', 'fic', 'No stress'],\n      correctAnswer: '3',\n      messageForCorrectAnswer: 'sci en TI fic',\n      messageForIncorrectAnswer: 'sci en TI fic'\n    },\n    {\n      ...commonQuestionStressProps,\n      question: 'Weigh',\n      answers: ['We', 'igh', 'No stress'],\n      correctAnswer: '3',\n      messageForCorrectAnswer: 'No stress',\n      messageForIncorrectAnswer: 'No stress'\n    },\n    {\n      ...commonQuestionStressProps,\n      question: 'Winner',\n      answers: ['Wi', 'nner', 'No stress'],\n      correctAnswer: '1',\n      messageForCorrectAnswer: 'WI nner',\n      messageForIncorrectAnswer: 'WI nner'\n    },\n    {\n      ...commonQuestionStressProps,\n      question: 'Competition',\n      answers: ['Com', 'pe', 'ti', 'tion', 'No stress'],\n      correctAnswer: '3',\n      messageForCorrectAnswer: 'com pe TI tion',\n      messageForIncorrectAnswer: 'com pe TI tion'\n    }\n  ]\n};\n\nconst commonQuestionIntonationProps = {\n  questionType: 'text',\n  answerSelectionType: 'single',\n  point: '20',\n  answers: ['Rising intonation', 'Falling intonation', 'Non-Final intonation'],\n  explanation: 'TODO'\n};\n\nexport const quizIntonation = {\n  appLocale: {\n    ...defaultLocale\n  },\n  quizTitle: '',\n  quizSynopsis: '',\n  questions: [\n    {\n      ...commonQuestionIntonationProps,\n      question: `I brought some wine, snacks, and a blanket for the picnic.`,\n      correctAnswer: '3',\n      messageForCorrectAnswer: 'Non-final: it’s a list',\n      messageForIncorrectAnswer: 'Non-final: it’s a list'\n    },\n    {\n      ...commonQuestionIntonationProps,\n      question: 'Does she have enough time to prepare?',\n      correctAnswer: '1',\n      messageForCorrectAnswer: 'Rising: Yes/No question',\n      messageForIncorrectAnswer: 'Rising: Yes/No question'\n    },\n    {\n      ...commonQuestionIntonationProps,\n      question: 'You’re still coming, aren’t you?',\n      correctAnswer: '1',\n      messageForCorrectAnswer: 'Rising: Question tag',\n      messageForIncorrectAnswer: 'Rising: Question tag'\n    },\n    {\n      ...commonQuestionIntonationProps,\n      question: 'It’s nice to meet you!',\n      correctAnswer: '2',\n      messageForCorrectAnswer: 'Falling: exclamation',\n      messageForIncorrectAnswer: 'Falling: exclamation'\n    },\n    {\n      ...commonQuestionIntonationProps,\n      question: 'Did you order the chicken or the fish?',\n      correctAnswer: '3',\n      messageForCorrectAnswer: 'Non-final: choice',\n      messageForIncorrectAnswer: 'Non-final: choice'\n    },\n    {\n      ...commonQuestionIntonationProps,\n      question: 'They didn’t go camping this weekend.',\n      correctAnswer: '2',\n      messageForCorrectAnswer: 'Falling: finished statement',\n      messageForIncorrectAnswer: 'Falling: finished statement'\n    },\n    {\n      ...commonQuestionIntonationProps,\n      question: 'Why did you quit your job?',\n      correctAnswer: '1',\n      messageForCorrectAnswer: 'Rising: WH- question',\n      messageForIncorrectAnswer: 'Rising: WH- question'\n    },\n    {\n      ...commonQuestionIntonationProps,\n      question: 'Good morning! It’s so beautiful outside.',\n      correctAnswer: '2',\n      messageForCorrectAnswer: 'Falling: exclamation and a finished statement',\n      messageForIncorrectAnswer: 'Falling: exclamation and a finished statement'\n    },\n    {\n      ...commonQuestionIntonationProps,\n      question: 'Submit the form after answering the questions.',\n      correctAnswer: '2',\n      messageForCorrectAnswer: 'Falling: command',\n      messageForIncorrectAnswer: 'Falling: command'\n    },\n    {\n      ...commonQuestionIntonationProps,\n      question: 'When I was a student, I had three months of vacation.',\n      correctAnswer: '3',\n      messageForCorrectAnswer: 'Non-final: conditional',\n      messageForIncorrectAnswer: 'Non-final: conditional'\n    }\n  ]\n};\n\nconst commonQuestionIntonationBisProps = {\n  questionType: 'text',\n  answerSelectionType: 'single',\n  point: '20',\n  answers: ['Rising intonation', 'Falling intonation', 'Non-Final intonation'],\n  explanation: 'TODO'\n};\n\nexport const quizIntonationBis = {\n  appLocale: {\n    ...defaultLocale\n  },\n  quizTitle: '',\n  quizSynopsis: '',\n  questions: [\n    {\n      ...commonQuestionIntonationBisProps,\n      question: 'How can I help you?',\n      correctAnswer: '2',\n      messageForCorrectAnswer: 'Falling',\n      messageForIncorrectAnswer: 'Falling'\n    },\n    {\n      ...commonQuestionIntonationBisProps,\n      question: 'Hi!',\n      correctAnswer: '2',\n      messageForCorrectAnswer: 'Falling',\n      messageForIncorrectAnswer: 'Falling'\n    },\n    {\n      ...commonQuestionIntonationBisProps,\n      question: 'Is she into sports?',\n      correctAnswer: '1',\n      messageForCorrectAnswer: 'Rising',\n      messageForIncorrectAnswer: 'Rising'\n    },\n    {\n      ...commonQuestionIntonationBisProps,\n      question: 'she already has everything.',\n      correctAnswer: '2',\n      messageForCorrectAnswer: 'Falling',\n      messageForIncorrectAnswer: 'Falling'\n    },\n    {\n      ...commonQuestionIntonationBisProps,\n      question: 'If I were you',\n      correctAnswer: '3',\n      messageForCorrectAnswer: 'Non-final',\n      messageForIncorrectAnswer: 'Non-final'\n    },\n    {\n      ...commonQuestionIntonationBisProps,\n      question: 'blue or grey?',\n      correctAnswer: '3',\n      messageForCorrectAnswer: 'Non-final',\n      messageForIncorrectAnswer: 'Non-final'\n    },\n    {\n      ...commonQuestionIntonationBisProps,\n      question: 'blue, grey, pink, and orange.',\n      correctAnswer: '3',\n      messageForCorrectAnswer: 'Non-final',\n      messageForIncorrectAnswer: 'Non-final'\n    },\n    {\n      ...commonQuestionIntonationBisProps,\n      question: 'Add the scarf as well',\n      correctAnswer: '2',\n      messageForCorrectAnswer: 'Falling',\n      messageForIncorrectAnswer: 'Falling'\n    },\n    {\n      ...commonQuestionIntonationBisProps,\n      question: 'that would be $280 in total',\n      correctAnswer: '2',\n      messageForCorrectAnswer: 'Falling',\n      messageForIncorrectAnswer: 'Falling'\n    },\n    {\n      ...commonQuestionIntonationBisProps,\n      question: '$280?',\n      correctAnswer: '1',\n      messageForCorrectAnswer: 'Rising',\n      messageForIncorrectAnswer: 'Rising'\n    }\n  ]\n};\n\nexport const customQuiz = [\n  ['əˈtɛn ʃən', 'attention'],\n  ['ˈfɪʃ ɪŋ', 'fishing'],\n  ['noʊt', 'note'],\n  ['fænˈtæs tɪk', 'fantastic'],\n  ['ˈɔr dnˌɛr i', 'ordinary'],\n  ['ˈbʌt ər', 'butter'],\n  ['ˈtʃæm pi ən', 'champion'],\n  ['ˈtrɛʒ ər', 'treasure'],\n  ['ˈwɛd ɪŋ', 'wedding'],\n  ['θɜrd', 'third']\n];\n\nexport const customQuizStress = [\n  ['Record', 'stress/‘Re cord.m4a', '/ˈrɛk ərd /', '/ rɪˈkɔrd /', 1],\n  ['Object', 'stress/Ob ‘ject.m4a', '/ˈɒb dʒɛkt/', '/ əbˈdʒɛkt /', 2],\n  ['Contract', 'stress/Con ‘tract.m4a', '/ ˈkɒn trækt /', '\t/ kənˈtrækt /', 2],\n  ['Increase', 'stress/‘In crease.m4a', '/ ˈɪn kris /', '/  ɪnˈkris /', 1],\n  ['Recall', 'stress/Re ‘call.m4a', '/ ˈri kɔl /', '/ rɪˈkɔl /', 2]\n];\n\nexport const defaultCustomQuizStressAnswers = [0, 0, 0, 0, 0];\n\nexport const defaultCustomQuizAnswers = ['', '', '', '', '', '', '', '', '', ''];\n\nexport const correctCustomQuizAnswers = customQuiz.map((c) => c[1]);\n","import { Pronunciation } from '../types';\n\nexport const diphthongs: Pronunciation[] = [\n  {\n    phoneme: '/aɪ/',\n    graphemes: 'i, igh, y, ie',\n    examples: '<u>i</u>ce, b<u>ye</u>, l<u>i</u>me, f<u>igh</u>t, sk<u>y</u>',\n    audioPhoneme: 'diphthongs/phonemes/-aɪ-.m4a',\n    audioExamples: 'diphthongs/examples/ice, bye, lime, fight , sky.m4a'\n  },\n  {\n    phoneme: '/eɪ/',\n    graphemes: 'a, a-e, ai, ay, eigh, ey',\n    examples: '<u>a</u>corn, j<u>a</u>d<u>e</u>, p<u>ai</u>d, w<u>eigh</u>t, h<u>ey</u>',\n    audioPhoneme: 'diphthongs/phonemes/-eɪ-.m4a',\n    audioExamples: 'diphthongs/examples/acorn, jade, paid, weight, hey.m4a'\n  },\n  {\n    phoneme: '/ɔɪ/',\n    graphemes: 'oi, oy',\n    examples: 'b<u>oy</u>, c<u>oi</u>n, s<u>oi</u>l, v<u>oi</u>ce, turqu<u>oi</u>se',\n    audioPhoneme: 'diphthongs/phonemes/-ɔɪ-.m4a',\n    audioExamples: 'diphthongs/examples/boy, coin, soil, voice, turquoise.m4a'\n  },\n  {\n    phoneme: '/oʊ/',\n    graphemes: 'o, ow',\n    examples: 'g<u>o</u>, t<u>o</u>tal, gr<u>ow</u>, <u>o</u>ver, g<u>ol</u>d',\n    audioPhoneme: 'diphthongs/phonemes/-oʊ-.m4a',\n    audioExamples: 'diphthongs/examples/go, total, grow, over, gold.m4a'\n  },\n  {\n    phoneme: '/aʊ/',\n    graphemes: 'ow',\n    examples: 'c<u>ow</u>, n<u>ow</u>, br<u>ow</u>n, w<u>ow</u>, <u>gow</u>n',\n    audioPhoneme: 'diphthongs/phonemes/-aʊ-.m4a',\n    audioExamples: 'diphthongs/examples/cow, now, brown, wow, gown.m4a'\n  }\n];\n\nexport const consonants: Pronunciation[] = [\n  {\n    phoneme: '/p/',\n    graphemes: 'p, pp',\n    examples: '<u>p</u>en, u<u>pp</u>er, pu<u>pp</u>y, gra<u>p</u>e, ha<u>pp</u>y',\n    audioPhoneme: 'consonants/phonemes/-p-.m4a',\n    audioExamples: 'consonants/examples/pen, upper, puppy, grape, happy.m4a'\n  },\n  {\n    phoneme: '/b/',\n    graphemes: 'b, bb',\n    examples: '<u>b</u>ig, ho<u>bb</u>y, <u>b</u>ee, li<u>b</u>rary, ca<u>b</u>',\n    audioPhoneme: 'consonants/phonemes/-b-.m4a',\n    audioExamples: 'consonants/examples/big, hobby, bee, library, cab.m4a'\n  },\n  {\n    phoneme: '/t/',\n    graphemes: 't, tt, bt, ght, ed',\n    examples: '<u>t</u>est, ki<u>tt</u>en, dou<u>bt</u>, l<u>ight</u>, work<u>ed</u>',\n    audioPhoneme: 'consonants/phonemes/-t-.m4a',\n    audioExamples: 'consonants/examples/test, kitten, doubt, light, worked.m4a'\n  },\n  {\n    phoneme: '/d/',\n    graphemes: 'd, dd, de, ld',\n    examples: '<u>d</u>aughter, a<u>dd</u>, br<u>ide</u>, wou<u>ld</u>, be<u>d</u>',\n    audioPhoneme: 'consonants/phonemes/-d-.m4a',\n    audioExamples: 'consonants/examples/daughter, add, bride, would, bed.m4a'\n  },\n  {\n    phoneme: '/tʃ/',\n    graphemes: 'ch, c,  tch, t+ure, t+ion',\n    examples: '<u>ch</u>ur<u>ch</u>, <u>c</u>ello, bea<u>ch</u>, ma<u>ture</u>, ques<u>tion</u>',\n    audioPhoneme: 'consonants/phonemes/-tʃ-.m4a',\n    audioExamples: 'consonants/examples/church, cello, beach, mature, question.m4a'\n  },\n  {\n    phoneme: '/dʒ/',\n    graphemes: 'g, j, ge, dge, gg',\n    examples: 'ca<u>ge</u>, <u>j</u>am,  ju<u>dge</u>, su<u>gg</u>est,  e<u>dge</u>',\n    audioPhoneme: 'consonants/phonemes/-dʒ-.m4a',\n    audioExamples: 'consonants/examples/cage, jam, judge, suggest, edge.m4a'\n  },\n  {\n    phoneme: '/k/',\n    graphemes: 'c, k,  ck, ch, que, q, cc',\n    examples: '<u>c</u>ause, <u>k</u>ing,  la<u>ck</u>,  a<u>ch</u>e, <u>que</u>st',\n    audioPhoneme: 'consonants/phonemes/-k-.m4a',\n    audioExamples: 'consonants/examples/cause, king, lack, ache, quest.m4a'\n  },\n  {\n    phoneme: '/g/',\n    graphemes: 'g, gg, gu, gue, gh',\n    examples: 'hu<u>g</u>, bi<u>gge</u>r, <u>gue</u>st, <u>gh</u>ost, va<u>gue</u>',\n    audioPhoneme: 'consonants/phonemes/-g-.m4a',\n    audioExamples: 'consonants/examples/hug, bigger, guest, ghost, vague.m4a'\n  },\n  {\n    phoneme: '/f/',\n    graphemes: 'f, ff, ph, lf, fe',\n    examples: '<u>f</u>lower, o<u>ff</u>er, gra<u>ph</u>, ha<u>lf</u>, gira<u>ffe</u>',\n    audioPhoneme: 'consonants/phonemes/-f-.m4a',\n    audioExamples: 'consonants/examples/flower, offer, graph, half, giraffe.m4a'\n  },\n  {\n    phoneme: '/v/',\n    graphemes: 'v, ve',\n    examples: '<u>ve</u>st, ha<u>ve</u>, glo<u>ve</u>, wi<u>ve</u>s, wa<u>ve</u>',\n    audioPhoneme: 'consonants/phonemes/-v-.m4a',\n    audioExamples: 'consonants/examples/vest, have, glove, wives, wave.m4a'\n  },\n  {\n    phoneme: '/θ/',\n    graphemes: 'th',\n    examples: '<u>Th</u>ursday, <u>th</u>ank, ba<u>th</u>, no<u>th</u>ing, bo<u>th</u>',\n    audioPhoneme: 'consonants/phonemes/-θ-.m4a',\n    audioExamples: 'consonants/examples/Thursday, thank, bath, nothing, both.m4a'\n  },\n  {\n    phoneme: '/ð/',\n    graphemes: 'th, the',\n    examples: 'wi<u>th</u>, mo<u>th</u>er, <u>th</u>ose, ga<u>th</u>er, fur<u>th</u>er',\n    audioPhoneme: 'consonants/phonemes/-ð-.m4a',\n    audioExamples: 'consonants/examples/with, mother, those, gather, further.m4a'\n  },\n  {\n    phoneme: '/s/',\n    graphemes: 's, ss,  ps, c, sc, ce, se',\n    examples: 'ki<u>ss</u>, <u>ps</u>ychology, ri<u>ce</u>, <u>c</u>ircle, pea<u>ce</u>',\n    audioPhoneme: 'consonants/phonemes/-s-.m4a',\n    audioExamples: 'consonants/examples/kiss, psychology, rice, circle, peace.m4a'\n  },\n  {\n    phoneme: '/z/',\n    graphemes: 'z, zz, se, ss',\n    examples: '<u>z</u>oo, ja<u>zz</u>, sci<u>ss</u>or, la<u>z</u>y, qui<u>zz</u>es',\n    audioPhoneme: 'consonants/phonemes/-z-.m4a',\n    audioExamples: 'consonants/examples/zoo, jazz, scissor, lazy, quizzes.m4a'\n  },\n  {\n    phoneme: '/ʃ/',\n    graphemes: 'sh, ti, ss, ch, tion, sion',\n    examples: '<u>sh</u>are, mo<u>tion</u>, pa<u>ssion</u>, ten<u>sion</u>, Engli<u>sh</u>',\n    audioPhoneme: 'consonants/phonemes/-ʃ-.m4a',\n    audioExamples: 'consonants/examples/share, motion, passion, tension, English.m4a'\n  },\n  {\n    phoneme: '/ʒ/',\n    graphemes: 's, ge, sion, sure',\n    examples: 'A<u>s</u>ia, ca<u>s</u>ual, bei<u>ge</u>, vi<u>sion</u>, mea<u>sure</u>',\n    audioPhoneme: 'consonants/phonemes/-ʒ-.m4a',\n    audioExamples: 'consonants/examples/Asia, casual, beige, vision, measure.m4a'\n  },\n  {\n    phoneme: '/m/',\n    graphemes: 'm, mm, mb, me, mn',\n    examples: '<u>m</u>o<u>m</u>, gra<u>mm</u>ar, cli<u>mb</u>, ga<u>me</u>, autu<u>mn</u>',\n    audioPhoneme: 'consonants/phonemes/m.m4a', // TODO: rename?\n    audioExamples: 'consonants/examples/mom, grammar, climb, game, autumn.m4a'\n  },\n  {\n    phoneme: '/n/',\n    graphemes: 'n, ne, nn, kn, pn, gn',\n    examples: '<u>n</u>i<u>ne</u>, co<u>nn</u>ect, <u>kn</u>ife, <u>pn</u>eumonia, <u>gn</u>aw',\n    audioPhoneme: 'consonants/phonemes/-n-.m4a',\n    audioExamples: 'consonants/examples/nine, connect, knife, pneumonia, gnaw.m4a'\n  },\n  {\n    phoneme: '/ŋ/',\n    graphemes: 'ng, n',\n    examples: 'si<u>ng</u>, ba<u>n</u>k, a<u>ng</u>ry, dri<u>n</u>k, ju<u>n</u>gle',\n    audioPhoneme: 'consonants/phonemes/-ŋ-.m4a',\n    audioExamples: 'consonants/examples/sing, bank, angry, drink, jungle.m4a'\n  },\n  {\n    phoneme: '/j/',\n    graphemes: 'y, io, u',\n    examples: '<u>y</u>oung, on<u>io</u>n, opin<u>io</u>n, <u>y</u>es, <u>u</u>se',\n    audioPhoneme: 'consonants/phonemes/-j-.m4a',\n    audioExamples: 'consonants/examples/young, onion, opinion, yes, use.m4a'\n  },\n  {\n    phoneme: '/l/',\n    graphemes: 'l, ll, le',\n    examples: '<u>l</u>ong, pi<u>ll</u>, tab<u>le</u>, <u>l</u>ike<u>l</u>y, <u>l</u>amp',\n    audioPhoneme: 'consonants/phonemes/-l-.m4a',\n    audioExamples: 'consonants/examples/long, pill, table, likely, lamp.m4a'\n  },\n  {\n    phoneme: '/r/',\n    graphemes: 'r, rr, wr, rh',\n    examples: '<u>r</u>est, bo<u>rr</u>ow, <u>rh</u>ythm, <u>wr</u>ite, <u>wr</u>ap',\n    audioPhoneme: 'consonants/phonemes/-r-.m4a',\n    audioExamples: 'consonants/examples/Rest, borrow, rhythm, write, wrap.m4a' // TODO: rename\n  },\n  {\n    phoneme: '/w/',\n    graphemes: 'w, wh, u, o',\n    examples: '<u>w</u>est, <u>wh</u>en, q<u>u</u>iet, <u>o</u>ne, <u>wh</u>ale',\n    audioPhoneme: 'consonants/phonemes/-w-.m4a',\n    audioExamples: 'consonants/examples/west, when, quiet, one, whale.m4a'\n  },\n  {\n    phoneme: '/h/',\n    graphemes: 'h, wh',\n    examples: '<u>h</u>ome, <u>wh</u>ole, <u>wh</u>o, <u>h</u>air, a<u>h</u>ead',\n    audioPhoneme: 'consonants/phonemes/-h-.m4a',\n    audioExamples: 'consonants/examples/home, whole, who, hair, ahead.m4a'\n  }\n];\n\nexport const vowels: Pronunciation[] = [\n  {\n    phoneme: '/iː/',\n    graphemes: 'e, ee, ea, ey, ie, y',\n    examples: 'gr<u>ee</u>n, sh<u>ee</u>p, t<u>ea</u>, k<u>ey</u>, funn<u>y</u>',\n    audioPhoneme: 'vowels/phonemes/-iː-.m4a',\n    audioExamples: 'vowels/examples/green, sheep, tea, key, funny.m4a'\n  },\n  {\n    phoneme: '/ɪ/',\n    graphemes: 'i, y, ui, u',\n    examples: 'p<u>i</u>nk, s<u>y</u>mbol, b<u>ui</u>ld, b<u>u</u>sy, q<u>ui</u>lt',\n    audioPhoneme: 'vowels/phonemes/-ɪ-.m4a',\n    audioExamples: 'vowels/examples/-pink, symbol, build, busy, quilt.m4a' // TODO: rename\n  },\n  {\n    phoneme: '/ʊ/',\n    graphemes: 'oo, ou, u',\n    examples: 'w<u>oo</u>d, c<u>ou</u>ld, f<u>ul</u>l, b<u>oo</u>k, p<u>u</u>sh',\n    audioPhoneme: 'vowels/phonemes/-ʊ-.m4a',\n    audioExamples: 'vowels/examples/wood, could, full, book, push.m4a'\n  },\n  {\n    phoneme: '/uː/',\n    graphemes: 'u, o, oo, ou',\n    examples: 'bl<u>u</u>e, wh<u>o</u>, n<u>oo</u>n, y<u>ou</u>, gr<u>ou</u>p',\n    audioPhoneme: 'vowels/phonemes/-uː-.m4a',\n    audioExamples: 'vowels/examples/blue, who, noon, you, group.m4a'\n  },\n  {\n    phoneme: '/e/',\n    graphemes: 'e, ea, ai',\n    examples: 'm<u>e</u>n, br<u>ea</u>d, m<u>e</u>t, s<u>ai</u>d, h<u>ea</u>d',\n    audioPhoneme: 'vowels/phonemes/-e-.m4a',\n    audioExamples: 'vowels/examples/men, bread, met, said, head.m4a'\n  },\n  {\n    phoneme: '/ə/',\n    graphemes: '(schwa sound)',\n    examples: 'b<u>a</u>nana, th<u>e,</u> ev<u>e</u>r, p<u>o</u>lice, <u>u</u>pon',\n    audioPhoneme: 'vowels/phonemes/-ə-.m4a',\n    audioExamples: 'vowels/examples/banana, the, ever, police, upon.m4a'\n  },\n  {\n    phoneme: '/ɜː/',\n    graphemes: 'i(r), u(r), ea(r)',\n    examples: 'b<u>ir</u>d, h<u>ur</u>t, l<u>ear</u>n, <u>ear</u>th, f<u>ur</u>niture',\n    audioPhoneme: 'vowels/phonemes/-ɜː-.m4a',\n    audioExamples: 'vowels/examples/bird, hurt, learn, earth, furniture.m4a'\n  },\n  {\n    phoneme: '/ɔː/',\n    graphemes: 'o(r), oo(r), o(r)e, oa(r)',\n    examples: 'm<u>or</u>ning, fl<u>oor</u>, w<u>ore</u>, b<u>oar</u>d, sp<u>or</u>t',\n    audioPhoneme: 'vowels/phonemes/-ɔː-.m4a',\n    audioExamples: 'vowels/examples/morning, floor, wore, board, sport.m4a'\n  },\n  {\n    phoneme: '/æ/',\n    graphemes: 'a, au, ai',\n    examples: '<u>a</u>pple, b<u>a</u>ck, pl<u>ai</u>d, l<u>au</u>gh, <u>a</u>fter',\n    audioPhoneme: 'vowels/phonemes/-æ-.m4a',\n    audioExamples: 'vowels/examples/apple, back, plaid, laugh, after.m4a'\n  },\n  {\n    phoneme: '/ʌ/',\n    graphemes: 'u, o, oo, oe',\n    examples: '<u>u</u>nder, h<u>o</u>ney, fl<u>oo</u>d, d<u>oe</u>s, f<u>u</u>n',\n    audioPhoneme: 'vowels/phonemes/-ʌ-.m4a',\n    audioExamples: 'vowels/examples/under, honey, flood, does, fun.m4a'\n  },\n  {\n    phoneme: '/aː/',\n    graphemes: 'a(r), o, ea(r), ow',\n    examples: 'h<u>ar</u>d, sh<u>ar</u>k, h<u>ear</u>t, kn<u>ow</u>ledge, b<u>o</u>dy',\n    audioPhoneme: 'vowels/phonemes/-aː-.m4a',\n    audioExamples: 'vowels/examples/hard, shark, heart, knowledge, body.m4a'\n  },\n  {\n    phoneme: '/ɒ/',\n    graphemes: 'o',\n    examples: 'l<u>o</u>t, cl<u>o</u>th, h<u>o</u>nest, rob<u>o</u>t, st<u>o</u>p',\n    audioPhoneme: 'vowels/phonemes/-ɒ-.m4a',\n    audioExamples: 'vowels/examples/lot, cloth, honest, robot, stop.m4a'\n  }\n];\n","export const AUTHOR_FIRSTNAME = 'Faith';\nexport const AUTHOR_LASTNAME = 'Pellas';\nexport const AUTHOR_FULLNAME = `${AUTHOR_FIRSTNAME} ${AUTHOR_LASTNAME}`;\nexport const BASE_PATH = `https://raw.githubusercontent.com/fbpellas/fbpellas.github.io/main/public/`;\nexport const BASE_PATH_IMG = `${BASE_PATH}img/`;\nexport const BASE_PATH_SOUNDS = `${BASE_PATH}sounds/`;\nexport const CREATION_YEAR_START = 2020;\nexport const CREATION_YEAR_END = 2022;\nexport const EMAIL = 'fbpellas@usfca.edu';\nexport const IPA_DEFINITION = 'International Phonetic Alphabet';\n","import flatten from 'lodash/flatten';\nimport { Breadcrumb, Pronunciation, QuizIndex } from '../types';\n\n/**\n * @name sanitizeExamples\n * @description Makes examples readable (human-friendly)\n */\nconst sanitizeExamples = (examples: string) => {\n  return examples.replace(/<u>/g, '').replace(/<\\/u>/g, '').split(', ');\n};\n\n/**\n * @name sanitizePhoneme\n * @description Makes phoneme readable (human-friendly)\n */\nconst sanitizePhoneme = (phoneme: string) => {\n  return phoneme.replace(/\\//g, '');\n};\n\n/**\n * @name generateKeysExamples\n * @description Returns a list of strings that can be matched for search (examples)\n */\nconst generateKeysExamples = (data: Pronunciation[]) => {\n  return flatten(\n    data.map((d: Pronunciation) => {\n      const { examples } = d;\n      const sanitizedExamples = sanitizeExamples(examples);\n\n      const filteredExamples = sanitizedExamples.filter((example: string) => example.length > 2);\n\n      return filteredExamples;\n    })\n  );\n};\n\n/**\n * @name generateKeysPhoneme\n * @description Returns a list of strings that can be matched for search (phoneme)\n */\nconst generateKeysPhoneme = (data: Pronunciation[]) => {\n  return flatten(\n    data.map((d: Pronunciation) => {\n      const { phoneme } = d;\n      const sanitizedPhoneme = sanitizePhoneme(phoneme);\n\n      return [sanitizedPhoneme, phoneme];\n    })\n  );\n};\n\n/**\n * @name titleize\n * @description Returns capital letter then same case\n */\nconst titleize = (word: string) => {\n  if (!word) return '';\n\n  const capitalLetter = word.charAt(0).toUpperCase();\n\n  if (word.length === 1) return capitalLetter;\n\n  return `${capitalLetter}${word.slice(1)}`;\n};\n\n/**\n * @name createBreadcrumb\n * @description Creates a simple breadcrumb based on a page\n */\nconst createBreadcrumb = (page: string): Breadcrumb => ({ anchor: page, title: titleize(page) });\n\n/**\n * @name getQuizParentBreadcrumb\n * @description Returns the parent breadcrumb that suits the current quiz best\n */\nconst getQuizParentBreadcrumb = (indexCarousel: QuizIndex): Breadcrumb => {\n  const {\n    GuessThePattern,\n    OddPhonemeOut,\n    PhoneticSpelling,\n    SameWordsDifferentStress,\n    ShoppingForAPresent,\n    WhereIsTheStress\n  } = QuizIndex;\n  const [phonemes, intonation, stress] = ['phonemes', 'intonation', 'stress'].map(createBreadcrumb);\n\n  switch (indexCarousel) {\n    case SameWordsDifferentStress:\n    case WhereIsTheStress:\n    default:\n      return stress;\n\n    case GuessThePattern:\n    case ShoppingForAPresent:\n      return intonation;\n\n    case OddPhonemeOut:\n    case PhoneticSpelling:\n      return phonemes;\n  }\n};\n\n/**\n * @name generateBreadcrumbs\n * @description Based on the current page, get the path to this page\n */\nconst generateBreadcrumbs = (page: string, indexCarousel: QuizIndex): Breadcrumb[] => {\n  const title = page === 'non-final' ? 'Non-Final' : titleize(page);\n  const currentPage: Breadcrumb = { anchor: page, title };\n\n  const [home, phonemes, intonation] = ['home', 'phonemes', 'intonation'].map(createBreadcrumb);\n  const quizParentBreadcrumb = getQuizParentBreadcrumb(indexCarousel);\n\n  switch (page) {\n    case 'about-author':\n      return [home, { anchor: page, title: 'About the Author' }];\n\n    case 'mission':\n      return [home, { anchor: page, title: 'Mission' }];\n\n    case 'intonation':\n    case 'phonemes':\n    case 'stress':\n      return [home, currentPage];\n\n    case 'consonants':\n    case 'diphthongs':\n    case 'vowels':\n      return [home, phonemes, currentPage];\n\n    case 'falling':\n    case 'non-final':\n    case 'rising':\n      return [home, intonation, currentPage];\n\n    case 'quiz':\n      return [home, quizParentBreadcrumb, currentPage];\n\n    default:\n      return [home];\n  }\n};\n\nexport {\n  createBreadcrumb,\n  getQuizParentBreadcrumb,\n  generateBreadcrumbs,\n  generateKeysExamples,\n  generateKeysPhoneme,\n  sanitizeExamples,\n  sanitizePhoneme,\n  titleize\n};\n","import { diphthongs, consonants, vowels } from './data/phonemes';\nimport { AUTHOR_FIRSTNAME, AUTHOR_FULLNAME, AUTHOR_LASTNAME } from './constants';\nimport { generateKeysExamples, generateKeysPhoneme } from './utils';\nimport { Search } from './types';\n\nconst typesSounds = [consonants, diphthongs, vowels];\nconst [consonantsKeysExamples, diphthongsKeysExamples, vowelsKeysExamples] = typesSounds.map(generateKeysExamples);\nconst [consonantsKeysPhoneme, diphthongsKeysPhoneme, vowelsKeysPhoneme] = typesSounds.map(generateKeysPhoneme);\n\nexport const mappingPhoneme: Search[] = [\n  { keywords: consonantsKeysPhoneme, anchor: 'consonants', title: 'Consonants (phonemes)' },\n  { keywords: diphthongsKeysPhoneme, anchor: 'diphthongs', title: 'Diphthongs (phonemes)' },\n  { keywords: vowelsKeysPhoneme, anchor: 'vowels', title: 'Vowels (phonemes)' }\n];\n\nconst mappingExamples: Search[] = [\n  { keywords: consonantsKeysExamples, anchor: 'consonants', title: 'Consonants (examples)' },\n  { keywords: diphthongsKeysExamples, anchor: 'diphthongs', title: 'Diphthongs (examples)' },\n  { keywords: vowelsKeysExamples, anchor: 'vowels', title: 'Vowels (examples)' }\n];\n\nexport const mapping: Search[] = [\n  ...mappingExamples,\n  ...mappingPhoneme,\n  {\n    keywords: [\n      'about',\n      'author',\n      'about the author',\n      AUTHOR_FIRSTNAME.toLowerCase(),\n      AUTHOR_LASTNAME.toLowerCase(),\n      AUTHOR_FULLNAME.toLowerCase()\n    ],\n    anchor: 'about-author',\n    title: 'About the Author'\n  },\n  { keywords: ['mission', 'teachers', 'how to', 'students'], anchor: 'mission', title: 'Mission' },\n  { keywords: ['consonant', 'consonants', 'letter', 'letters'], anchor: 'consonants', title: 'Consonants' },\n\n  { keywords: ['phoneme', 'phonemes'], anchor: 'phonemes', title: 'Phonemes' },\n  { keywords: ['letter', 'vowel', 'vowels'], anchor: 'vowels', title: 'Vowels' },\n  { keywords: ['diphthong', 'diphthongs'], anchor: 'diphthongs', title: 'Diphthongs' },\n  { keywords: ['stress'], anchor: 'stress', title: 'Stress' },\n  { keywords: ['intonation'], anchor: 'intonation', title: 'Intonation' },\n  { keywords: ['rising', 'up', 'intonation'], anchor: 'rising', title: 'Rising' },\n  { keywords: ['falling', 'down', 'intonation'], anchor: 'falling', title: 'Falling' },\n  { keywords: ['non-final', 'up', 'down', 'non final', 'intonation'], anchor: 'non-final', title: 'Non-Final' },\n  {\n    keywords: [\n      'odd phoneme out',\n      'odd one out',\n      'phonetic spelling',\n      'same words different stress',\n      'where is the stress',\n      \"where's the stress\",\n      'guess the pattern',\n      'shopping for a present',\n      'quiz',\n      'quizzes'\n    ],\n    anchor: 'quiz',\n    title: 'Quiz'\n  },\n  {\n    keywords: ['english', 'pronunciation', 'english pronunciation', 'home', 'homepage', 'main'],\n    anchor: 'home',\n    title: 'Homepage'\n  }\n];\n","import * as React from 'react';\nimport { AUTHOR_FULLNAME, CREATION_YEAR_START, CREATION_YEAR_END } from '../constants';\n\nexport interface FooterProps {}\n\nconst Footer: React.FC<FooterProps> = (_props) => {\n  return (\n    <div className=\"footer\">\n      {AUTHOR_FULLNAME}, website created in {CREATION_YEAR_START}-{CREATION_YEAR_END} and hosted on{' '}\n      <a\n        className=\"clickable-page\"\n        target=\"_blank\"\n        rel=\"noreferrer noopener\"\n        href=\"https://github.com/fbpellas/fbpellas.github.io\"\n      >\n        GitHub\n      </a>\n    </div>\n  );\n};\n\nexport { Footer };\n","import * as React from 'react';\nimport { BASE_PATH_IMG } from '../constants';\n\nexport interface MissionProps {}\n\nconst Mission: React.FC<MissionProps> = (_props) => {\n  return (\n    <div className=\"block-2\">\n      <div className=\"article\">\n        <h3 className=\"h3-title\">Mission</h3>\n        <img className=\"half-img\" src={`${BASE_PATH_IMG}wall.jpeg`} alt=\"Learn the Art of Speaking American English\" />\n        <p className=\"margin-top\">\n          One of the biggest goals for language learners is to learn how to speak with the correct pronunciation of\n          their target language. Unfortunately, many English as a second/foreign language (ESL/EFL) curricula do not\n          focus on pronunciation, therefore, many teachers lack training in this field. The purpose of this website is\n          to help teachers and students understand the basics of pronunciation. By learning pronunciation, students can\n          feel more confident in speaking and communicating.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport { Mission };\n","import * as React from 'react';\nimport { OverlayTrigger, Tooltip as TooltipBootstrap } from 'react-bootstrap';\n\nexport interface TooltipProps {\n  word: string;\n  definition: string;\n  className?: string;\n}\n\nconst Tooltip: React.FC<TooltipProps> = (props) => {\n  const { className = 'text-inline bottom-dot', definition, word } = props;\n\n  return (\n    <OverlayTrigger\n      key=\"bottom\"\n      placement=\"bottom\"\n      overlay={<TooltipBootstrap id={`tooltip-bottom`}>{definition}</TooltipBootstrap>}\n    >\n      <div className={className}>{word}</div>\n    </OverlayTrigger>\n  );\n};\n\nexport { Tooltip };\n","import * as React from 'react';\nimport { HiPlay } from 'react-icons/hi';\nimport { BASE_PATH_SOUNDS } from '../constants';\nimport { Pronunciation } from '../types';\nimport { Tooltip } from './Tooltip';\n\nexport interface PhonemesTableProps {\n  data: Pronunciation[];\n}\n\nconst PhonemesTable: React.FC<PhonemesTableProps> = (props) => {\n  const { data } = props;\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>\n            <Tooltip className=\"text-center\" definition=\"Sounds\" word=\"Phonemes\" />\n          </th>\n          <th className=\"text-center\">\n            <Tooltip className=\"text-center\" definition=\"Letters that spell the sound\" word=\"Grapheme\" />\n          </th>\n          <th className=\"text-center\">Examples</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((d: Pronunciation) => {\n          const { phoneme, graphemes, examples, audioPhoneme, audioExamples } = d;\n\n          const audioPhonemeObj = new Audio(`${BASE_PATH_SOUNDS}${audioPhoneme}`);\n          const audioExamplesObj = new Audio(`${BASE_PATH_SOUNDS}${audioExamples}`);\n          const examplesSplit = examples.split(', ');\n\n          return (\n            <tr key={phoneme}>\n              <td>\n                <HiPlay\n                  className=\"play-icon\"\n                  onClick={() => {\n                    audioPhonemeObj.play();\n                  }}\n                />\n                {phoneme}\n              </td>\n              <td>{graphemes}</td>\n              <td>\n                <HiPlay\n                  className=\"play-icon\"\n                  onClick={() => {\n                    audioExamplesObj.play();\n                  }}\n                />\n                {examplesSplit.map((example: string, index: number) => {\n                  const isLast = index === examplesSplit.length - 1;\n\n                  if (isLast)\n                    return (\n                      <div key={example} className=\"text-inline nowrap\" dangerouslySetInnerHTML={{ __html: example }} />\n                    );\n\n                  return (\n                    <div key={example} className=\"text-inline\">\n                      <div className=\"text-inline nowrap\" dangerouslySetInnerHTML={{ __html: example }} />,{' '}\n                    </div>\n                  );\n                })}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport { PhonemesTable };\n","import * as React from 'react';\nimport { IPA_DEFINITION } from '../constants';\nimport { vowels } from '../data/phonemes';\nimport { PhonemesTable } from './PhonemesTable';\nimport { Tooltip } from './Tooltip';\n\nexport interface VowelsProps {\n  setPageAndClear: (hash: string) => void;\n}\n\nconst Vowels: React.FC<VowelsProps> = (props) => {\n  const { setPageAndClear } = props;\n\n  return (\n    <div className=\"block-2\">\n      <div className=\"article\">\n        <h2 className=\"h3-title vowels-title\">Vowels</h2>\n        <br />\n        <div>\n          Vowels are a set of unblocked sounds. They consist of the letters A, E, I, O, U (sometimes Y). The{' '}\n          <Tooltip definition={IPA_DEFINITION} word=\"IPA\" /> lists 20 phonemes categorized as long, short, and{' '}\n          <a className=\"clickable-page\" href=\"#diphthongs\" onClick={() => setPageAndClear('diphthongs')}>\n            diphthongs\n          </a>\n          .\n        </div>\n        <br />\n        <div>\n          Vowels can sometimes be categorized as lax (short) and tense (long) depending on how much effort the lips and\n          tongue make when producing the sound.\n        </div>\n        <br />\n        <div>\n          Listed below are the phonemes that are widely used in the American English language. Some words might vary in\n          phonemes depending on regional dialects.\n        </div>\n        <PhonemesTable data={vowels} />\n      </div>\n    </div>\n  );\n};\n\nexport { Vowels };\n","import * as React from 'react';\nimport { BASE_PATH_IMG, IPA_DEFINITION } from '../constants';\n\nexport interface PhonemesProps {\n  setPageAndClear: (hash: string) => void;\n}\n\nconst Phonemes: React.FC<PhonemesProps> = (props) => {\n  const { setPageAndClear } = props;\n\n  return (\n    <div className=\"block-2\">\n      <div className=\"article\">\n        <h3 className=\"h3-title\">Phonemes</h3>\n        <div>\n          According to the {IPA_DEFINITION} (IPA), there are 26 letters and 44 phonemes (or sounds) in the English\n          alphabet. These letters are divided into two categories:{' '}\n          <a className=\"clickable-page\" href=\"#vowels\" onClick={() => setPageAndClear('vowels')}>\n            vowels\n          </a>{' '}\n          and{' '}\n          <a className=\"clickable-page\" href=\"#consonants\" onClick={() => setPageAndClear('consonants')}>\n            consonants\n          </a>\n          .\n        </div>\n        <br />\n        <div>\n          <div className=\"note\">Note:</div> Phonemes should not rely on the word’s spelling. For example, the word m\n          <i>\n            <b>oo</b>\n          </i>\n          n is not spelled with the letter ‘u’, yet is produced with the long /u/ phoneme.{' '}\n        </div>\n        <img\n          className=\"margin-top half-img\"\n          src={`${BASE_PATH_IMG}IPA chart.jpg`}\n          alt=\"Learn the Art of Speaking American English\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport { Phonemes };\n","import * as React from 'react';\nimport { IPA_DEFINITION } from '../constants';\nimport { diphthongs } from '../data/phonemes';\nimport { PhonemesTable } from './PhonemesTable';\nimport { Tooltip } from './Tooltip';\n\nexport interface DiphthongsProps {}\n\nconst Diphthongs: React.FC<DiphthongsProps> = (_props) => {\n  return (\n    <div className=\"block-2\">\n      <div className=\"article\">\n        <h3 className=\"h3-title\">Diphthongs</h3>\n        <div>\n          Diphthongs are a combination of two vowel sounds. There are eight diphthongs in the{' '}\n          <Tooltip definition={IPA_DEFINITION} word=\"IPA\" />: aɪ, eɪ, ɔɪ, aʊ, ɪə, ʊə, əʊ, eə. However, only five sounds\n          are produced in American English.\n        </div>\n        <PhonemesTable data={diphthongs} />\n      </div>\n    </div>\n  );\n};\n\nexport { Diphthongs };\n","import * as React from 'react';\nimport { HiPlay } from 'react-icons/hi';\nimport { BASE_PATH_IMG, BASE_PATH_SOUNDS } from '../constants';\nimport { QuizIndex } from '../types';\n\nexport interface StressProps {\n  setIndexCarousel: React.Dispatch<React.SetStateAction<QuizIndex>>;\n  setPageAndClear: (hash: string) => void;\n}\n\nconst Stress: React.FC<StressProps> = (props) => {\n  const { setIndexCarousel, setPageAndClear } = props;\n\n  const audioPresent = new Audio(`${BASE_PATH_SOUNDS}stress/‘Present vs pre ‘sent.m4a`);\n  const audioReject = new Audio(`${BASE_PATH_SOUNDS}stress/‘Reject re ‘ject.m4a`);\n  const audioConduct = new Audio(`${BASE_PATH_SOUNDS}stress/‘Con duct vs Con ‘duct.m4a`);\n\n  return (\n    <div className=\"block-2\">\n      <div className=\"article\">\n        <h3 className=\"h3-title\">Stress</h3>\n        <img className=\"half-img\" src={`${BASE_PATH_IMG}stress.jpg`} alt=\"Stress\" />\n        <div className=\"margin-top\">\n          Understanding word stress can help English language learners communicate clearly. A word stress emphasizes a\n          syllable of a word with 2 or more syllables. Content words (nouns, verbs, adjectives) are usually stressed.\n        </div>\n        <br />\n        <div>A syllable is a unit of a word with one vowel sound.</div>\n        <br />\n        <ul>\n          <li>hi= 1 syllable</li>\n          <li>flo~wer= 2 syllables</li>\n          <li>e~lec~tric= 3 syllables</li>\n          <li>sig~ni~fi~cant= 4 syllables</li>\n        </ul>\n        <br />\n        <div>\n          If a word has one syllable, there is no stress. Word stress is marked with the (ˈ) symbol which looks like an\n          apostrophe. The stress mark comes before the stressed syllable.\n        </div>\n        <br />\n        <p>e.g.</p>\n        <ul>\n          <li>hi / haɪ /</li>\n          <li>ˈflower /ˈflaʊ ər/</li>\n          <li>eˈlectric / ɪˈlɛk trɪk /</li>\n          <li>sigˈnificant / sɪgˈnɪf ɪ kənt /</li>\n        </ul>\n        <br />\n        <div>\n          When pronouncing the stress, the syllable should sound a little higher, longer, and louder than the rest of\n          the syllables.\n        </div>\n        <br />\n        <h3 className=\"h3-title\">Rule of Thumb</h3>\n        <br />\n        <div>2-syllable nouns: the first syllable is stressed</div>\n        <br />\n        <ul>\n          <li>\n            <u>per</u>son / ˈpɜr sən /\n          </li>\n          <li>\n            <u>cas</u>tle / ˈkæs əl /\n          </li>\n          <li>\n            <u>bas</u>ket /ˈbæs kɪt /\n          </li>\n        </ul>\n        <br />\n        <div>2-syllable verbs: the second syllable is stressed</div>\n        <br />\n        <ul>\n          <li>\n            de<u>mand</u> / dɪˈmænd /\n          </li>\n          <li>\n            ar<u>rive</u> / əˈraɪv /\n          </li>\n          <li>\n            com<u>plete</u> / kəmˈplit /\n          </li>\n        </ul>\n        <br />\n        <div>Some words are similar but have different meanings based on the word stress.</div>\n        <br />\n        <HiPlay\n          className=\"play-icon\"\n          onClick={() => {\n            audioPresent.play();\n          }}\n        />\n        Play\n        <ul>\n          <li>ˈpresent (noun) : current moment or time</li>\n          <li>preˈsent (verb) : to show</li>\n        </ul>\n        <br />\n        <HiPlay\n          className=\"play-icon\"\n          onClick={() => {\n            audioReject.play();\n          }}\n        />\n        Play\n        <ul>\n          <li>ˈreject (noun): something flawed or has mistakes and imperfections</li>\n          <li>reˈject (verb): to refuse, to not accept</li>\n        </ul>\n        <br />\n        <HiPlay\n          className=\"play-icon\"\n          onClick={() => {\n            audioConduct.play();\n          }}\n        />\n        Play\n        <ul>\n          <li>ˈconduct (noun): behavior</li>\n          <li>conˈduct (verb): to lead</li>\n        </ul>\n        <br />\n        <div>What other words have similar spellings, but different meanings and stress?</div>\n        <br />\n        <div>Quiz yourself on how well you can distinguish word stress:</div>\n        <ul>\n          <li>\n            <a\n              className=\"clickable-page\"\n              href=\"#quiz\"\n              onClick={() => {\n                setPageAndClear('quiz');\n                setIndexCarousel(QuizIndex.SameWordsDifferentStress);\n              }}\n            >\n              Same Words, Different Stress\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"clickable-page\"\n              href=\"#quiz\"\n              onClick={() => {\n                setPageAndClear('quiz');\n                setIndexCarousel(QuizIndex.WhereIsTheStress);\n              }}\n            >\n              Where’s the Stress\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport { Stress };\n","import * as React from 'react';\nimport { PhonemesTable } from './PhonemesTable';\nimport { Tooltip } from './Tooltip';\nimport { consonants } from '../data/phonemes';\nimport { QuizIndex } from '../types';\nimport { IPA_DEFINITION } from '../constants';\n\nexport interface ConsonantsProps {\n  setIndexCarousel: React.Dispatch<React.SetStateAction<QuizIndex>>;\n  setPageAndClear: (hash: string) => void;\n}\n\nconst Consonants: React.FC<ConsonantsProps> = (props) => {\n  const { setIndexCarousel, setPageAndClear } = props;\n\n  return (\n    <div className=\"block-2\">\n      <div className=\"article\">\n        <h3 className=\"h3-title\">Consonants</h3>\n        <div>\n          Consonants have 24 blocked sounds. In the <Tooltip definition={IPA_DEFINITION} word=\"IPA\" /> chart, consonants\n          are arranged completely differently from the English alphabet.\n        </div>\n        <div>\n          Phonemes like /p/ and /b/ are next to each other because the lips and the tongue move the same way when\n          producing these sounds. The only difference is the phoneme on the left is unvoiced (no vibration on the\n          throat) and the phoneme on the right is voiced (there is vibration on the throat).\n        </div>\n        <PhonemesTable data={consonants} />\n        <div>Test yourself to see how well you know the phonemes</div>\n        <ul>\n          <li>\n            <a\n              className=\"clickable-page\"\n              href=\"#quiz\"\n              onClick={() => {\n                setPageAndClear('quiz');\n                setIndexCarousel(QuizIndex.OddPhonemeOut);\n              }}\n            >\n              Odd Phoneme Out\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"clickable-page\"\n              href=\"#quiz\"\n              onClick={() => {\n                setPageAndClear('quiz');\n                setIndexCarousel(QuizIndex.PhoneticSpelling);\n              }}\n            >\n              Phonetic Spelling\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport { Consonants };\n","import * as React from 'react';\nimport { HiPlay } from 'react-icons/hi';\nimport { BASE_PATH_IMG, BASE_PATH_SOUNDS } from '../constants';\n\nexport interface IntonationProps {\n  setPageAndClear: (hash: string) => void;\n}\n\nconst Intonation: React.FC<IntonationProps> = (props) => {\n  const { setPageAndClear } = props;\n\n  const audioTest1 = new Audio(`${BASE_PATH_SOUNDS}intonation/He failed the test1.m4a`);\n  const audioTest2 = new Audio(`${BASE_PATH_SOUNDS}intonation/Hé failed the test2.m4a`);\n\n  return (\n    <div className=\"block-2\">\n      <div className=\"article\">\n        <h3 className=\"h3-title\">Intonation</h3>\n        <img className=\"margin-top quarter-img\" src={`${BASE_PATH_IMG}pitch.jpg`} alt=\"Pitch\" />\n        <div className=\"margin-top\">\n          Aside from grammar and vocabulary, learning intonation is equally important in American English.\n        </div>\n        <br />\n        <div>Intonation refers to the tone and pitch of the voice when speaking.</div>\n        <div>\n          <div className=\"note\">Pitch:</div> the highness or lowness of the voice\n        </div>\n        <div>\n          <div className=\"note\">Tone:</div> the way someone speaks\n        </div>\n        <br />\n        <div>\n          It helps others understand what kind of message you are trying to communicate. Are you happy? Sad? Surprised?\n          Asking a question? Even though a person speaks with perfect grammar, the meaning could get lost if the\n          intonation is not correct.\n        </div>\n        <br />\n        <div>Listen to these sentences below.</div>\n        <div>\n          {' '}\n          <HiPlay\n            className=\"play-icon\"\n            onClick={() => {\n              audioTest1.play();\n            }}\n          />\n          He failed the <b>test.</b>\n        </div>\n\n        <div>\n          {' '}\n          <HiPlay\n            className=\"play-icon\"\n            onClick={() => {\n              audioTest2.play();\n            }}\n          />\n          He failed the <b>test?</b>\n        </div>\n        <br />\n        <div>\n          The word <i>test</i> is the focus word, which is stressed or emphasized. When a word is stressed, the pitch is\n          higher. There are 2 basic types of intonation: rising and falling.\n        </div>\n        <br />\n        <div>\n          In the first sentence, the intonation falls at the end of the sentence to show that the sentence is finished.\n          On the other hand, the intonation on the second statement rises to show surprise or disbelief. The next\n          sections discuss the different patterns of intonation:{' '}\n          <a className=\"clickable-page\" href=\"#falling\" onClick={() => setPageAndClear('falling')}>\n            falling\n          </a>\n          ,{' '}\n          <a className=\"clickable-page\" href=\"#rising\" onClick={() => setPageAndClear('rising')}>\n            rising\n          </a>\n          , and{' '}\n          <a className=\"clickable-page\" href=\"#non-final\" onClick={() => setPageAndClear('non-final')}>\n            non-final\n          </a>\n          .\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { Intonation };\n","import * as React from 'react';\n\nexport interface ArrowWordProps {\n  word?: string;\n  isUp?: boolean;\n}\n\nconst ArrowWord: React.FC<ArrowWordProps> = (props) => {\n  const { word = '', isUp = false } = props;\n\n  const arrow = isUp ? '➚' : '➘';\n\n  return (\n    <>\n      <div className=\"inline-period yellow\">{arrow}</div>\n      {word && word}\n    </>\n  );\n};\n\nexport { ArrowWord };\n","import * as React from 'react';\nimport { QuizIndex } from '../types';\n\nexport interface IntonationQuizLinksProps {\n  setIndexCarousel: React.Dispatch<React.SetStateAction<QuizIndex>>;\n  setPageAndClear: (hash: string) => void;\n}\n\nconst IntonationQuizLinks: React.FC<IntonationQuizLinksProps> = (props) => {\n  const { setIndexCarousel, setPageAndClear } = props;\n  const { GuessThePattern, ShoppingForAPresent } = QuizIndex;\n\n  return (\n    <>\n      <div>Test yourself to see how well you know intonations:</div>\n      <ul>\n        <li>\n          <a\n            className=\"clickable-page\"\n            href=\"#quiz\"\n            onClick={() => {\n              setPageAndClear('quiz');\n              setIndexCarousel(GuessThePattern);\n            }}\n          >\n            Guess the Pattern\n          </a>\n        </li>\n        <li>\n          <a\n            className=\"clickable-page\"\n            href=\"#quiz\"\n            onClick={() => {\n              setPageAndClear('quiz');\n              setIndexCarousel(ShoppingForAPresent);\n            }}\n          >\n            Shopping for a Present\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport { IntonationQuizLinks };\n","import * as React from 'react';\nimport { QuizIndex } from '../types';\nimport { ArrowWord } from './ArrowWord';\nimport { IntonationQuizLinks } from './IntonationQuizLinks';\n\nexport interface FallingProps {\n  setIndexCarousel: React.Dispatch<React.SetStateAction<QuizIndex>>;\n  setPageAndClear: (hash: string) => void;\n}\n\nconst Falling: React.FC<FallingProps> = (props) => {\n  const { setIndexCarousel, setPageAndClear } = props;\n\n  return (\n    <div className=\"block-2\">\n      <div className=\"article\">\n        <h3 className=\"h3-title\">\n          Falling Intonation <ArrowWord />\n        </h3>\n        <div className=\"margin-top\">\n          This is the most common intonation pattern in American English. We use this intonation when we finish a\n          statement, give a command, as an information question, and an exclamation. The intonation falls on the last\n          word of the sentence.\n        </div>\n        <br />\n        <div>\n          <b>Finished Statements:</b>\n          <br />\n          <ul>\n            <li>\n              We live in <ArrowWord word=\"France\" />.\n            </li>\n            <li>\n              They are not <ArrowWord word=\"invited\" />.\n            </li>\n            <li>\n              It takes five hours to get <ArrowWord word=\"there\" />.\n            </li>\n          </ul>\n        </div>\n        <br />\n        <div>\n          <b>Commands:</b>\n          <div>\n            Statements use to give orders. Commands or imperative sentences start with the verb and not the subject.\n          </div>\n          <br />\n          <ul>\n            <li>\n              Report to me <ArrowWord word=\"immediately\" />.\n            </li>\n            <li>\n              Do not take any <ArrowWord word=\"photos\" />.\n            </li>\n            <li>\n              Brush your teeth and go to <ArrowWord word=\"bed\" />.\n            </li>\n          </ul>\n        </div>\n        <br />\n        <div>\n          <b>Wh- Questions:</b>\n          <div>Who, What, When, Where, How, Why, Which are also known as information questions.</div>\n          <br />\n          <ul>\n            <li>\n              How are <ArrowWord word=\"you\" />?\n            </li>\n            <li>\n              When is your <ArrowWord word=\"birthday\" />?\n            </li>\n            <li>\n              Why did you lie to <ArrowWord word=\"me\" />?\n            </li>\n          </ul>\n        </div>\n        <br />\n        <div>\n          <b>Exclamations or Interjections:</b>\n          <div>\n            Statements that express surprise, awe, pain, etc. Interjections are always marked with an exclamation point\n            (!)\n          </div>\n          <br />\n          <ul>\n            <li>\n              That’s <ArrowWord word=\"amazing\" />!\n            </li>\n            <li>\n              <ArrowWord word=\"Congratulations\" />!\n            </li>\n            <li>\n              You look lovely in that <ArrowWord word=\"dress\" />!\n            </li>\n          </ul>\n        </div>\n        <br />\n        <IntonationQuizLinks setIndexCarousel={setIndexCarousel} setPageAndClear={setPageAndClear} />\n      </div>\n    </div>\n  );\n};\n\nexport { Falling };\n","import * as React from 'react';\nimport { QuizIndex } from '../types';\nimport { ArrowWord } from './ArrowWord';\nimport { IntonationQuizLinks } from './IntonationQuizLinks';\n\nexport interface RisingProps {\n  setIndexCarousel: React.Dispatch<React.SetStateAction<QuizIndex>>;\n  setPageAndClear: (hash: string) => void;\n}\n\nconst Rising: React.FC<RisingProps> = (props) => {\n  const { setIndexCarousel, setPageAndClear } = props;\n\n  return (\n    <div className=\"block-2\">\n      <div className=\"article\">\n        <h3 className=\"h3-title\">\n          Rising Intonation <ArrowWord isUp />\n        </h3>\n        <div className=\"margin-top\">\n          The voice rises at the end of the statement. We often use this pattern when asking a yes or no question, a\n          question tag, or to show surprise or disbelief.\n        </div>\n        <br />\n        <div>\n          <b>Yes/No Questions:</b>\n          <br />\n          <ul>\n            <li>\n              Are you working <ArrowWord isUp word=\"tomorrow\" />?\n            </li>\n            <li>\n              Has Stephen called <ArrowWord isUp word=\"you\" />?\n            </li>\n            <li>\n              Could you please print out the <ArrowWord isUp word=\"documents\" />?\n            </li>\n          </ul>\n        </div>\n        <br />\n        <div>\n          <b>Question Tags:</b>\n          <div>\n            Questions at the end of the sentence to ask for confirmation. A question tag consists of an auxiliary verb\n            (am, is, are, can, have, do, does, etc.) and a pronoun.\n          </div>\n          <br />\n          <ul>\n            <li>\n              They left already, didn’t <ArrowWord isUp word=\"they\" />?\n            </li>\n            <li>\n              Sandra is your cousin, isn’t <ArrowWord isUp word=\"she\" />?\n            </li>\n            <li>\n              You can ride a motorcycle, can’t <ArrowWord isUp word=\"you\" />?\n            </li>\n          </ul>\n        </div>\n        <br />\n        <div>\n          <b>Surprise or Disbelief:</b>\n          <div>The intonation rises on the word that is emphasized.</div>\n          <br />\n          <ul>\n            <li>\n              <ArrowWord isUp word=\"Really\" />? Where did you hear that?\n            </li>\n            <li>\n              She won 5 million dollars in the <ArrowWord isUp word=\"lottery\" />? -disbelief that she won the ‘lottery’\n            </li>\n            <li>\n              She won <ArrowWord isUp word=\"5 million\" /> dollars in the lottery? -disbelief that she won $5 million\n            </li>\n          </ul>\n        </div>\n        <br />\n        <IntonationQuizLinks setIndexCarousel={setIndexCarousel} setPageAndClear={setPageAndClear} />\n      </div>\n    </div>\n  );\n};\n\nexport { Rising };\n","import * as React from 'react';\nimport { QuizIndex } from '../types';\nimport { ArrowWord } from './ArrowWord';\nimport { IntonationQuizLinks } from './IntonationQuizLinks';\n\nexport interface NonFinalProps {\n  setIndexCarousel: React.Dispatch<React.SetStateAction<QuizIndex>>;\n  setPageAndClear: (hash: string) => void;\n}\n\nconst NonFinal: React.FC<NonFinalProps> = (props) => {\n  const { setIndexCarousel, setPageAndClear } = props;\n\n  return (\n    <div className=\"block-2\">\n      <div className=\"article\">\n        <h3 className=\"h3-title\">\n          Non-Final Intonation <ArrowWord isUp />\n          <ArrowWord />\n        </h3>\n        <div className=\"margin-top\">\n          The non-final or rise-and-fall intonation is often used with choices, lists, or unfinished statements. The\n          examples below show which words rise and where they fall.\n        </div>\n        <br />\n        <div>\n          <b>Choices:</b>\n          <br />\n          <ul>\n            <li>\n              Do you prefer ice <ArrowWord isUp word=\"cream\" /> or <ArrowWord word=\"cake\" />?\n            </li>\n            <li>\n              What would you rather do: go <ArrowWord isUp word=\"hiking\" /> or go <ArrowWord word=\"swimming\" />?\n            </li>\n            <li>\n              Can you speak <ArrowWord isUp word=\"Mandarin\" /> or <ArrowWord word=\"Spanish\" />?\n            </li>\n          </ul>\n        </div>\n        <br />\n        <div>\n          <b>Lists:</b>\n          <div>Each item on the list rises in sound and the last word falls.</div>\n          <br />\n          <ul>\n            <li>\n              We need <ArrowWord isUp word=\"flour\" />, <ArrowWord isUp word=\"milk\" />, <ArrowWord isUp word=\"sugar\" />,\n              and <ArrowWord word=\"eggs\" /> to make the cake.\n            </li>\n            <li>\n              Next week I’m available on <ArrowWord isUp word=\"Monday\" />, <ArrowWord isUp word=\"Tuesday\" />, and{' '}\n              <ArrowWord word=\"Friday\" />.\n            </li>\n            <li>\n              The shirt comes in <ArrowWord isUp word=\"small\" />, <ArrowWord isUp word=\"medium\" />, and{' '}\n              <ArrowWord word=\"large\" />.\n            </li>\n          </ul>\n        </div>\n        <br />\n        <div>\n          <b>Introductory/Non-Final Statements:</b>\n          <div>These statements are typically at the beginning of the sentence.</div>\n          <br />\n          <ul>\n            <li>\n              When <ArrowWord isUp word=\"I\" /> grow <ArrowWord word=\"up\" />\n              ...\n            </li>\n            <li>\n              <ArrowWord isUp word=\"By\" /> the <ArrowWord word=\"way\" />,\n            </li>\n            <li>\n              <ArrowWord isUp word=\"As\" /> I was <ArrowWord word=\"saying\" />,\n            </li>\n            <li>\n              <ArrowWord isUp word=\"Just\" /> so you <ArrowWord word=\"know\" />,\n            </li>\n          </ul>\n        </div>\n        <br />\n        <div>\n          <b>Conditional Statements:</b>\n          <div>\n            Conditionals usually start with ‘if’ or ‘when’. The last word of the first clause rises, then falls at the\n            end.\n          </div>\n          <br />\n          <ul>\n            <li>\n              If I have a million <ArrowWord isUp word=\"dollars\" />, I would travel the <ArrowWord word=\"world\" />.\n            </li>\n            <li>\n              When I was a <ArrowWord isUp word=\"child\" />, I played <ArrowWord word=\"football\" />.\n            </li>\n            <li>\n              If it’s cold <ArrowWord isUp word=\"outside\" />, I will wear a <ArrowWord word=\"jacket\" />.\n            </li>\n          </ul>\n        </div>\n        <br />\n        <IntonationQuizLinks setIndexCarousel={setIndexCarousel} setPageAndClear={setPageAndClear} />\n      </div>\n    </div>\n  );\n};\n\nexport { NonFinal };\n","import * as React from 'react';\nimport { generateBreadcrumbs } from '../utils';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { QuizIndex } from '../types';\n\nexport interface BreadcrumbsProps {\n  page: string;\n  indexCarousel: QuizIndex;\n}\n\nconst Breadcrumbs: React.FC<BreadcrumbsProps> = (props) => {\n  const { indexCarousel, page } = props;\n  const breadcrumbs = generateBreadcrumbs(page, indexCarousel);\n\n  const { length } = breadcrumbs;\n\n  if (length <= 1) return null;\n\n  return (\n    <Breadcrumb>\n      {breadcrumbs.map((breadcrumb, index) => {\n        const { anchor, title } = breadcrumb;\n        const isLast = index === length - 1;\n        if (isLast) {\n          return (\n            <Breadcrumb.Item active key={anchor}>\n              {title}\n            </Breadcrumb.Item>\n          );\n        }\n\n        return (\n          <Breadcrumb.Item href={`#${anchor}`} key={anchor}>\n            {title}\n          </Breadcrumb.Item>\n        );\n      })}\n    </Breadcrumb>\n  );\n};\n\nexport { Breadcrumbs };\n","import * as React from 'react';\nimport { Carousel } from 'react-bootstrap';\nimport { BASE_PATH_IMG } from '../constants';\nimport { QuizIndex } from '../types';\n\nexport interface QuizCarouselProps {\n  indexCarousel: QuizIndex;\n  setIndexCarousel: React.Dispatch<React.SetStateAction<QuizIndex>>;\n}\n\nconst QuizCarousel: React.FC<QuizCarouselProps> = (props) => {\n  const { indexCarousel, setIndexCarousel } = props;\n\n  const handleSelect = (selectedIndex: number) => {\n    setIndexCarousel(selectedIndex);\n  };\n\n  return (\n    <Carousel activeIndex={indexCarousel} onSelect={handleSelect} interval={null} className=\"carousel-custom\">\n      <Carousel.Item>\n        <img className=\"d-block w-100\" src={`${BASE_PATH_IMG}quiz/ODD PHON.png`} alt=\"Odd Phoneme Out\" />\n      </Carousel.Item>\n      <Carousel.Item>\n        <img className=\"d-block w-100\" src={`${BASE_PATH_IMG}quiz/PHONETIC SPELL.png`} alt=\"Phonetic Spelling\" />\n      </Carousel.Item>\n      <Carousel.Item>\n        <img className=\"d-block w-100\" src={`${BASE_PATH_IMG}quiz/SAME WORDS.png`} alt=\"Same Words, Different Stress\" />\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src={`${BASE_PATH_IMG}quiz/WHERES THE STRESS bis.png`}\n          alt=\"Where’s the Stress?\"\n        />\n      </Carousel.Item>\n      <Carousel.Item>\n        <img className=\"d-block w-100\" src={`${BASE_PATH_IMG}quiz/GUESS THE PATTERN.png`} alt=\"Guess the Pattern\" />\n      </Carousel.Item>\n      <Carousel.Item>\n        <img className=\"d-block w-100\" src={`${BASE_PATH_IMG}quiz/SHOPPING.png`} alt=\"Shopping for a Present\" />\n      </Carousel.Item>\n    </Carousel>\n  );\n};\n\nexport { QuizCarousel };\n","import * as React from 'react';\nimport { Card as CardBootstrap } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\n\nexport interface CardProps {\n  setPageAndClear: (hash: string) => void;\n  description: string;\n  href: string;\n  title: string;\n}\n\nconst Card: React.FC<CardProps> = (props) => {\n  const { description, href, setPageAndClear, title } = props;\n\n  return (\n    <CardBootstrap>\n      <CardBootstrap.Body>\n        <CardBootstrap.Text>{title}</CardBootstrap.Text>\n        <CardBootstrap.Title>{description}</CardBootstrap.Title>\n        <Button href={`#${href}`} onClick={() => setPageAndClear(href)} variant=\"secondary\">\n          Learn\n        </Button>\n      </CardBootstrap.Body>\n    </CardBootstrap>\n  );\n};\n\nexport { Card };\n","import * as React from 'react';\nimport { CardDeck } from 'react-bootstrap';\nimport { BASE_PATH_IMG } from '../constants';\nimport { Card } from './Card';\nimport { isMobile } from 'react-device-detect';\n\nexport interface HomeProps {\n  setPageAndClear: (hash: string) => void;\n}\n\nconst Home: React.FC<HomeProps> = (props) => {\n  const { setPageAndClear } = props;\n  const title = 'Learn the Art of Speaking American English';\n\n  return (\n    <div className=\"block-2\">\n      <div className=\"article\">\n        {isMobile ? (\n          <div className=\"home-title\">{title}</div>\n        ) : (\n          <>\n            <img className=\"full-img\" src={`${BASE_PATH_IMG}IME Thesis.png`} alt={title} />\n            <br />\n          </>\n        )}\n        <CardDeck>\n          <Card\n            href=\"phonemes\"\n            title=\"Phonemes\"\n            description=\"Learn how to pronounce letters in English\"\n            setPageAndClear={setPageAndClear}\n          />\n          <Card\n            href=\"stress\"\n            title=\"Word Stress\"\n            description=\"Understand how to emphasize each syllable\"\n            setPageAndClear={setPageAndClear}\n          />\n          <Card\n            href=\"intonation\"\n            title=\"Intonation\"\n            description=\"Improve the pitch and the tone of your voice\"\n            setPageAndClear={setPageAndClear}\n          />\n        </CardDeck>\n      </div>\n    </div>\n  );\n};\n\nexport { Home };\n","import * as React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { EMAIL } from '../constants';\nimport { isMobile } from 'react-device-detect';\n\nexport interface ContactFormProps {}\n\nconst ContactForm: React.FC<ContactFormProps> = (_props) => {\n  const [emailBody, setEmailBody] = React.useState('');\n  const [emailSubject, setEmailSubject] = React.useState('');\n  const buttonRequest = `mailto:${EMAIL}?subject=${encodeURIComponent(emailSubject)}&body=${encodeURIComponent(\n    emailBody\n  )}`;\n\n  return (\n    <Form className=\"form\">\n      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Label>Email form</Form.Label>\n        <Form.Text className=\"text-muted\">{`Or send me an email directly at ${EMAIL}`}</Form.Text>\n        <br />\n        <Form.Label>Subject</Form.Label>\n        <Form.Control\n          onChange={(e) => {\n            setEmailSubject(e.target.value);\n          }}\n          type=\"text\"\n          placeholder=\"Subject\"\n        />\n        <br />\n        <Form.Label>Body</Form.Label>\n        <Form.Control\n          onChange={(e) => {\n            setEmailBody(e.target.value);\n          }}\n          as=\"textarea\"\n          rows={isMobile ? 5 : 10}\n          placeholder=\"Your message\"\n        />\n      </Form.Group>\n      <br />\n      <Button\n        onClick={() => {\n          window.open(buttonRequest);\n        }}\n        className=\"form-button\"\n        variant=\"warning\"\n        type=\"submit\"\n      >\n        Send\n      </Button>\n    </Form>\n  );\n};\n\nexport { ContactForm };\n","import * as React from 'react';\nimport { AUTHOR_FIRSTNAME, AUTHOR_FULLNAME, BASE_PATH_IMG } from '../constants';\n\nexport interface AboutAuthorProps {}\n\nconst AboutAuthor: React.FC<AboutAuthorProps> = (_props) => {\n  return (\n    <div className=\"block-2\">\n      <div className=\"article\">\n        <h3 className=\"h3-title\">About the Author</h3>\n        <div className=\"flex-wrapper\">\n          <div className=\"flex-1\">\n            <img className=\"full-img\" src={`${BASE_PATH_IMG}faith.jpg`} alt={AUTHOR_FULLNAME} />\n          </div>\n          <div className=\"author-text flex-2\">\n            <p>\n              {AUTHOR_FULLNAME} is a scholar at the University of San Francisco’s TESOL department. For the past four\n              years, she has been teaching English to learners from beginners to advanced levels. When she’s not working\n              on her thesis, {AUTHOR_FIRSTNAME} loves learning French, watercolor painting, and sending postcards to her\n              nearest and dearest.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport { AboutAuthor };\n","import * as React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nexport interface DropdownItemProps {\n  anchor: string;\n  setPageAndClear: (hash: string) => void;\n  title: string;\n}\n\nconst DropdownItem: React.FC<DropdownItemProps> = (props) => {\n  const { anchor, setPageAndClear, title } = props;\n  const href = `#${anchor}`;\n\n  return (\n    <Dropdown.Item\n      href={href}\n      onClick={() => {\n        setPageAndClear(anchor);\n      }}\n    >\n      {title}\n    </Dropdown.Item>\n  );\n};\n\nexport { DropdownItem };\n","import * as React from 'react';\nimport { NavHover } from '../types';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Nav from 'react-bootstrap/Nav';\nimport { DropdownItem } from './DropdownItem';\n\nexport interface NavBarProps {\n  navHovered: NavHover | undefined;\n  setNavHovered: (value: React.SetStateAction<NavHover | undefined>) => void;\n  setPageAndClear: (hash: string) => void;\n}\n\nconst NavBar: React.FC<NavBarProps> = (props) => {\n  const { navHovered, setNavHovered, setPageAndClear } = props;\n\n  const isAuthorHovered = navHovered === NavHover.Author;\n  const isIntonationHovered = navHovered === NavHover.Intonation;\n  const isPhonemesHovered = navHovered === NavHover.Phonemes;\n\n  return (\n    <>\n      <Dropdown\n        onMouseEnter={() => {\n          setNavHovered(NavHover.Author);\n        }}\n        onMouseLeave={() => {\n          setNavHovered(undefined);\n        }}\n        show={isAuthorHovered}\n      >\n        <Dropdown.Toggle\n          href=\"#about-author\"\n          onClick={() => {\n            setPageAndClear('about-author');\n          }}\n          variant=\"secondary\"\n          id=\"dropdown-about\"\n        >\n          About\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <DropdownItem anchor=\"about-author\" setPageAndClear={setPageAndClear} title=\"About the Author\" />\n          <DropdownItem anchor=\"mission\" setPageAndClear={setPageAndClear} title=\"Mission\" />\n        </Dropdown.Menu>\n      </Dropdown>\n      <Dropdown\n        onMouseEnter={() => {\n          setNavHovered(NavHover.Phonemes);\n        }}\n        onMouseLeave={() => {\n          setNavHovered(undefined);\n        }}\n        show={isPhonemesHovered}\n      >\n        <Dropdown.Toggle\n          href=\"#phonemes\"\n          onClick={() => {\n            setPageAndClear('phonemes');\n          }}\n          variant=\"secondary\"\n          id=\"dropdown-phonemes\"\n        >\n          Phonemes\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <DropdownItem anchor=\"vowels\" setPageAndClear={setPageAndClear} title=\"Vowels\" />\n          <DropdownItem anchor=\"diphthongs\" setPageAndClear={setPageAndClear} title=\"Diphthongs\" />\n          <DropdownItem anchor=\"consonants\" setPageAndClear={setPageAndClear} title=\"Consonants\" />\n        </Dropdown.Menu>\n      </Dropdown>\n      <Nav>\n        <Nav.Link href=\"#stress\" onClick={() => setPageAndClear('stress')}>\n          Stress\n        </Nav.Link>\n      </Nav>\n      <Dropdown\n        onMouseEnter={() => {\n          setNavHovered(NavHover.Intonation);\n        }}\n        onMouseLeave={() => {\n          setNavHovered(undefined);\n        }}\n        show={isIntonationHovered}\n      >\n        <Dropdown.Toggle\n          href=\"#intonation\"\n          onClick={() => {\n            setPageAndClear('intonation');\n          }}\n          variant=\"secondary\"\n          id=\"dropdown-intonation\"\n        >\n          Intonation\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <DropdownItem anchor=\"falling\" setPageAndClear={setPageAndClear} title=\"Falling\" />\n          <DropdownItem anchor=\"rising\" setPageAndClear={setPageAndClear} title=\"Rising\" />\n          <DropdownItem anchor=\"non-final\" setPageAndClear={setPageAndClear} title=\"Non-Final\" />\n        </Dropdown.Menu>\n      </Dropdown>\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"#quiz\" onClick={() => setPageAndClear('quiz')}>\n          Quiz\n        </Nav.Link>\n      </Nav>\n    </>\n  );\n};\n\nexport { NavBar };\n","import * as React from 'react';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n\nexport interface MobileDropdownItemProps {\n  anchor: string;\n  setPageAndClear: (hash: string) => void;\n  title: string;\n}\n\nconst MobileDropdownItem: React.FC<MobileDropdownItemProps> = (props) => {\n  const { anchor, setPageAndClear, title } = props;\n  const href = `#${anchor}`;\n\n  return (\n    <NavDropdown.Item\n      href={href}\n      onClick={() => {\n        setPageAndClear(anchor);\n      }}\n    >\n      {title}\n    </NavDropdown.Item>\n  );\n};\n\nexport { MobileDropdownItem };\n","import * as React from 'react';\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport { AUTHOR_FULLNAME } from '../constants';\nimport { MobileDropdownItem } from './MobileDropdownItem';\n\nexport interface MobileNavBarProps {\n  setPageAndClear: (hash: string) => void;\n}\n\nconst MobileNavBar: React.FC<MobileNavBarProps> = (props) => {\n  const { setPageAndClear } = props;\n\n  return (\n    <Navbar sticky=\"top\" collapseOnSelect expand=\"md\" bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"#home\">{AUTHOR_FULLNAME}</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <NavDropdown title=\"About\" id=\"collapsible-nav-dropdown-about\">\n            <MobileDropdownItem anchor=\"about-author\" setPageAndClear={setPageAndClear} title=\"About the Author\" />\n            <MobileDropdownItem anchor=\"mission\" setPageAndClear={setPageAndClear} title=\"Mission\" />\n          </NavDropdown>\n          <NavDropdown title=\"Phonemes\" id=\"collapsible-nav-dropdown-phonemes\">\n            <MobileDropdownItem anchor=\"phonemes\" setPageAndClear={setPageAndClear} title=\"Phonemes\" />\n            <NavDropdown.Divider />\n            <MobileDropdownItem anchor=\"vowels\" setPageAndClear={setPageAndClear} title=\"Vowels\" />\n            <MobileDropdownItem anchor=\"diphthongs\" setPageAndClear={setPageAndClear} title=\"Diphthongs\" />\n            <MobileDropdownItem anchor=\"consonants\" setPageAndClear={setPageAndClear} title=\"Consonants\" />\n          </NavDropdown>\n          <Nav.Link\n            href=\"#stress\"\n            onClick={() => {\n              setPageAndClear('stress');\n            }}\n          >\n            Stress\n          </Nav.Link>\n          <NavDropdown title=\"Intonation\" id=\"collapsible-nav-dropdown-intonation\">\n            <MobileDropdownItem anchor=\"intonation\" setPageAndClear={setPageAndClear} title=\"Intonation\" />\n            <NavDropdown.Divider />\n            <MobileDropdownItem anchor=\"falling\" setPageAndClear={setPageAndClear} title=\"Falling\" />\n            <MobileDropdownItem anchor=\"rising\" setPageAndClear={setPageAndClear} title=\"Rising\" />\n            <MobileDropdownItem anchor=\"non-final\" setPageAndClear={setPageAndClear} title=\"Non-Final\" />\n          </NavDropdown>\n          <Nav.Link\n            href=\"#quiz\"\n            onClick={() => {\n              setPageAndClear('quiz');\n            }}\n          >\n            Quiz\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport { MobileNavBar };\n","import * as React from 'react';\nimport { HiPlay } from 'react-icons/hi';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { isMobile } from 'react-device-detect';\nimport classnames from 'classnames';\nimport {\n  correctCustomQuizAnswers,\n  customQuiz,\n  customQuizStress,\n  defaultCustomQuizAnswers,\n  defaultCustomQuizStressAnswers,\n  quiz,\n  quizIntonation,\n  quizIntonationBis,\n  quizStress\n} from './quiz';\nimport Quiz from 'react-quiz-component';\nimport { mapping, mappingPhoneme } from './search';\nimport uniqBy from 'lodash/uniqBy';\nimport { AUTHOR_FULLNAME, BASE_PATH_IMG, BASE_PATH_SOUNDS } from './constants';\nimport { NavHover, QuizIndex, Search, SearchMatch } from './types';\nimport { Footer } from './components/Footer';\nimport { Mission } from './components/Mission';\nimport { Vowels } from './components/Vowels';\nimport { Phonemes } from './components/Phonemes';\nimport { Diphthongs } from './components/Diphthongs';\nimport { Stress } from './components/Stress';\nimport { Consonants } from './components/Consonants';\nimport { Intonation } from './components/Intonation';\nimport { Falling } from './components/Falling';\nimport { Rising } from './components/Rising';\nimport { NonFinal } from './components/NonFinal';\nimport { Breadcrumbs } from './components/Breadcrumbs';\nimport { QuizCarousel } from './components/QuizCarousel';\nimport { Home } from './components/Home';\nimport { ContactForm } from './components/ContactForm';\nimport { AboutAuthor } from './components/AboutAuthor';\nimport { NavBar } from './components/NavBar';\nimport { Nav, NavDropdown } from 'react-bootstrap';\nimport { MobileNavBar } from './components/MobileNavBar';\n\nconst App = () => {\n  const {\n    OddPhonemeOut,\n    GuessThePattern,\n    PhoneticSpelling,\n    SameWordsDifferentStress,\n    ShoppingForAPresent,\n    WhereIsTheStress\n  } = QuizIndex;\n  const quizLastIndex = ShoppingForAPresent;\n\n  const [navHovered, setNavHovered] = React.useState<NavHover | undefined>(undefined);\n  const [search, setSearch] = React.useState('');\n  const [matches, setMatches] = React.useState<SearchMatch[]>([]);\n  const [indexCarousel, setIndexCarousel] = React.useState(OddPhonemeOut);\n\n  const hash = window?.location?.hash?.substring(1);\n  const [page, setPage] = React.useState(hash);\n  const [quizAnswers, setQuizAnswers] = React.useState(defaultCustomQuizAnswers);\n\n  const [quizStressAnswers, setQuizStressAnswers] = React.useState(defaultCustomQuizStressAnswers);\n\n  const [quizScore, setQuizScore] = React.useState(0);\n  const [quizStressScore, setQuizStressScore] = React.useState(0);\n  const [quizStressTotal, setQuizStressTotal] = React.useState(0);\n\n  const setPageAndClear = (hash: string) => {\n    setNavHovered(undefined);\n    setSearch('');\n    setMatches([]);\n    setPage(hash);\n  };\n\n  window.onhashchange = () => {\n    const hash = window?.location?.hash?.substring(1);\n    setPageAndClear(hash);\n  };\n\n  const renderCustomQuiz = () => {\n    return (\n      <div className=\"custom-quiz\">\n        <img\n          className=\"margin-top half-img\"\n          src={`${BASE_PATH_IMG}IPA chart.jpg`}\n          alt=\"Learn the Art of Speaking American English\"\n        />\n        <div className=\"margin-top\">\n          <h3>Phonetic Spelling</h3>\n          {quizScore === 0 &&\n            'Guess the words based on their phonetic spelling. The box will turn green if the answer is correct.'}\n          {quizScore === 1 && 'Great work!'}\n          {quizScore > 1 &&\n            quizScore < correctCustomQuizAnswers.length &&\n            `${quizScore} correct answers out of ${correctCustomQuizAnswers.length}, keep going`}\n          {quizScore === correctCustomQuizAnswers.length && 'Congratulations! You did it!'}\n          {quizScore === correctCustomQuizAnswers.length + 1 && 'Here are the full answers'}\n        </div>\n        <div>Refer to the IPA chart for clues.</div>\n        <br />\n        {customQuiz.map((c: string[], index: number) => {\n          const currentValue = quizAnswers[index].toLocaleLowerCase().trim();\n          const isCorrect = currentValue === c[1];\n          const classNames = isCorrect ? 'correct-input attempt-input' : 'attempt-input';\n\n          return (\n            <div className=\"block\">\n              <input\n                className={classNames}\n                maxLength={20}\n                type=\"string\"\n                value={currentValue}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const newQuizAnswers = { ...quizAnswers };\n                  newQuizAnswers[index] = input;\n\n                  let score = 0;\n                  correctCustomQuizAnswers.forEach((correct, index: number) => {\n                    if (newQuizAnswers[index] === correct) score += 1;\n                  });\n\n                  setQuizScore(score);\n\n                  setQuizAnswers(newQuizAnswers);\n                }}\n              />\n              <div className=\"inline\">{c[0]}</div>\n            </div>\n          );\n        })}\n        <br />\n        <button\n          className=\"button-block custom-button\"\n          type=\"button\"\n          onClick={() => {\n            setQuizScore(correctCustomQuizAnswers.length + 1);\n            setQuizAnswers(correctCustomQuizAnswers);\n          }}\n        >\n          Check Answers!\n        </button>\n        <button\n          className=\"custom-button\"\n          type=\"button\"\n          onClick={() => {\n            setQuizScore(0);\n            setQuizAnswers(defaultCustomQuizAnswers);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n    );\n  };\n\n  const renderCustomQuizStress = () => {\n    const everythingAnswered = quizStressTotal === defaultCustomQuizStressAnswers.length;\n    return (\n      <div className=\"custom-quiz\">\n        <h3>Same Words, Different Stress</h3>\n        Listen to the recording and choose the answer with the correct stress mark. Green indicates correct and red\n        means the answer is wrong.\n        {customQuizStress.map((c: any, index: number) => {\n          const audioStress = new Audio(`${BASE_PATH_SOUNDS}${c[1]}`);\n          const correctAnswer = c[4];\n          const isDisabled = quizStressAnswers[index] !== 0;\n          let classNameButton1 = '';\n          let classNameButton2 = '';\n\n          if (isDisabled) {\n            if (correctAnswer === 1) {\n              classNameButton1 = 'correct-button';\n              classNameButton2 = 'incorrect-button';\n            } else {\n              classNameButton1 = 'incorrect-button';\n              classNameButton2 = 'correct-button';\n            }\n          }\n\n          const commonClassesButton = 'custom-button choice-button';\n\n          return (\n            <div className=\"margin-top\">\n              <HiPlay\n                className=\"play-icon\"\n                onClick={() => {\n                  audioStress.play();\n                }}\n              />\n              <div className=\"margin-right inline\">{c[0]}</div>\n              <div>\n                <button\n                  disabled={isDisabled}\n                  className={`${commonClassesButton} margin-right block ${classNameButton1}`}\n                  type=\"button\"\n                  onClick={() => {\n                    const newQuizStressAnswers = { ...quizStressAnswers };\n                    const isCorrectAnswer = correctAnswer === 1;\n                    const value = isCorrectAnswer ? 1 : -1;\n                    newQuizStressAnswers[index] = value;\n                    setQuizStressAnswers(newQuizStressAnswers);\n                    setQuizStressTotal(quizStressTotal + 1);\n                    if (isCorrectAnswer) setQuizStressScore(quizStressScore + 1);\n                  }}\n                >\n                  {c[2]}\n                </button>\n                <button\n                  className={`${commonClassesButton} inline ${classNameButton2}`}\n                  type=\"button\"\n                  disabled={isDisabled}\n                  onClick={() => {\n                    const newQuizStressAnswers = { ...quizStressAnswers };\n                    const isCorrectAnswer = correctAnswer === 2;\n                    const value = isCorrectAnswer ? 1 : -1;\n                    newQuizStressAnswers[index] = value;\n                    setQuizStressAnswers(newQuizStressAnswers);\n                    setQuizStressTotal(quizStressTotal + 1);\n                    if (isCorrectAnswer) setQuizStressScore(quizStressScore + 1);\n                  }}\n                >\n                  {c[3]}\n                </button>\n              </div>\n            </div>\n          );\n        })}\n        {everythingAnswered && <p>{`You scored ${quizStressScore} out of ${defaultCustomQuizStressAnswers.length}`}</p>}\n        <button\n          className=\"margin-top custom-button\"\n          type=\"button\"\n          onClick={() => {\n            setQuizStressAnswers(defaultCustomQuizStressAnswers);\n            setQuizStressScore(0);\n            setQuizStressTotal(0);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n    );\n  };\n\n  // TODO: use React Router ultimately\n  const renderBody = () => {\n    if (page === 'about-author') {\n      return (\n        <div className=\"anti-flex\">\n          <AboutAuthor />\n          <hr />\n          <ContactForm />\n        </div>\n      );\n    }\n\n    if (page === 'mission') {\n      return <Mission />;\n    }\n\n    if (page === 'phonemes') {\n      return <Phonemes setPageAndClear={setPageAndClear} />;\n    }\n\n    if (page === 'diphthongs') {\n      return <Diphthongs />;\n    }\n\n    if (page === 'vowels') {\n      return <Vowels setPageAndClear={setPageAndClear} />;\n    }\n\n    if (page === 'falling') {\n      return <Falling setIndexCarousel={setIndexCarousel} setPageAndClear={setPageAndClear} />;\n    }\n\n    if (page === 'rising') {\n      return <Rising setIndexCarousel={setIndexCarousel} setPageAndClear={setPageAndClear} />;\n    }\n\n    if (page === 'non-final') {\n      return <NonFinal setIndexCarousel={setIndexCarousel} setPageAndClear={setPageAndClear} />;\n    }\n\n    if (page === 'consonants') {\n      return <Consonants setIndexCarousel={setIndexCarousel} setPageAndClear={setPageAndClear} />;\n    }\n\n    if (page === 'stress') {\n      return <Stress setIndexCarousel={setIndexCarousel} setPageAndClear={setPageAndClear} />;\n    }\n\n    if (page === 'intonation') {\n      return <Intonation setPageAndClear={setPageAndClear} />;\n    }\n\n    if (page === 'quiz') {\n      const previousQuizClasses = classnames(`flex-1 previous-quiz`, {\n        'disabled-quiz': indexCarousel === 0,\n        'selection-quiz': indexCarousel !== 0\n      });\n\n      const nextQuizClasses = classnames(`flex-1 next-quiz`, {\n        'disabled-quiz': indexCarousel === quizLastIndex,\n        'selection-quiz': indexCarousel !== quizLastIndex\n      });\n\n      // TODO: create component\n      return (\n        <div className=\"block-2\">\n          <div className=\"article\">\n            <h3 className=\"h3-title\">Quiz</h3>\n            <QuizCarousel indexCarousel={indexCarousel} setIndexCarousel={setIndexCarousel} />\n            {indexCarousel === OddPhonemeOut && <Quiz quiz={quiz} showInstantFeedback={true} />}\n            {indexCarousel === PhoneticSpelling && renderCustomQuiz()}\n            {indexCarousel === SameWordsDifferentStress && renderCustomQuizStress()}\n            {indexCarousel === WhereIsTheStress && (\n              <>\n                <div className=\"quiz-header\">\n                  <h3>Where’s the Stress?</h3>\n                  <p>Choose the syllable that is pronounced with the correct word stress.</p>\n                </div>\n                <Quiz quiz={quizStress} showInstantFeedback={true} />\n              </>\n            )}\n            {indexCarousel === GuessThePattern && (\n              <>\n                <div className=\"quiz-header\">\n                  <h3>Guess the Pattern</h3>\n                  <p>Choose whether the following sentence has a falling, rising, or a non-final intonation.</p>\n                </div>\n                <Quiz quiz={quizIntonation} showInstantFeedback={true} />\n              </>\n            )}\n            {indexCarousel === ShoppingForAPresent && (\n              <>\n                <div className=\"margin-top discussion\">\n                  <p>Read the conversation between Annie and the salesperson.</p>\n                  <ol>\n                    <li>\n                      Salesperson: Hello! <b>How can I help you?</b>\n                    </li>\n                    <li>\n                      Annie: <b>Hi!</b> I’m looking for a present for my sister’s birthday. What would you recommend?\n                    </li>\n                    <li>\n                      S: Well, what does she like? <b>Is she into sports?</b> Does she love art?\n                    </li>\n                    <li>\n                      A: I’m not so sure, <b>she already has everything.</b>\n                    </li>\n                    <li>\n                      S: <b>If I were you,</b> I would give her new clothes. Maybe that shirt?\n                    </li>\n                    <li>\n                      A: Oh, I think she will like that. Should I get her the <b>blue or grey</b>?\n                    </li>\n                    <li>\n                      S: Why not give her one of every color? We have <b>blue, grey, pink, and orange.</b>\n                    </li>\n                    <li>\n                      A: I’ll take them all. <b>Add the scarf as well,</b> please.\n                    </li>\n                    <li>\n                      S: Okay, <b>that would be $280 in total.</b>\n                    </li>\n                    <li>\n                      A: <b>$280?</b> I think I’ll just get the scarf, then.\n                    </li>\n                  </ol>\n                </div>\n                <div className=\"quiz-header\">\n                  <h3>Shopping for a Present</h3>\n                  <p>Identify whether the following phrase has a falling, rising, or a non-final intonation.</p>\n                </div>\n                <Quiz className=\"margin-top\" quiz={quizIntonationBis} showInstantFeedback={true} />\n              </>\n            )}\n          </div>\n          <div className=\"flex-wrapper footer-quiz\">\n            <a\n              className={previousQuizClasses}\n              href=\"#quiz\"\n              onClick={() => {\n                if (indexCarousel > 0) {\n                  setIndexCarousel(indexCarousel - 1);\n                }\n              }}\n            >\n              ← Previous Quiz\n            </a>\n            <a\n              className={nextQuizClasses}\n              href=\"#quiz\"\n              onClick={() => {\n                if (indexCarousel < quizLastIndex) {\n                  setIndexCarousel(indexCarousel + 1);\n                }\n              }}\n            >\n              Next Quiz →\n            </a>\n          </div>\n        </div>\n      );\n    }\n\n    return <Home setPageAndClear={setPageAndClear} />;\n  };\n\n  const renderMatches = () => {\n    if (matches.length === 0) {\n      return null;\n    }\n\n    const matchesLinks = matches.map((m: SearchMatch) => {\n      const { anchor, keyword, title } = m;\n      const key = `search:${search};match:${anchor};keyword:${keyword};title:${title}`;\n\n      return (\n        <div key={key}>\n          <a\n            className=\"result\"\n            href={`#${anchor}`}\n            onClick={() => {\n              setPageAndClear(anchor);\n            }}\n          >\n            {title}\n          </a>{' '}\n          {`(\"${keyword}\")`}\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"resultsWrapper\">\n        <div className=\"results\">\n          Results: <div>{matchesLinks}</div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <HelmetProvider>\n      <link\n        rel=\"stylesheet\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\n        integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\"\n        data-cross-origin=\"anonymous\"\n      />\n      <Helmet>\n        <title>{`English Pronunciation by ${AUTHOR_FULLNAME}`}</title>\n        <link rel=\"canonical\" href=\"https://fbpellas.github.io/\" />\n      </Helmet>\n      {isMobile && <MobileNavBar setPageAndClear={setPageAndClear} />}\n      <div className=\"main\">\n        {!isMobile && (\n          <a className=\"h1-title\" href=\"#about-author\" onClick={() => setPageAndClear('about-author')}>\n            {AUTHOR_FULLNAME}\n          </a>\n        )}\n        <a className=\"h2-title\" href=\"#home\" onClick={() => setPageAndClear('home')}>\n          English Pronunciation\n        </a>\n        {!isMobile && (\n          <Navbar className=\"navbar\" expand=\"lg\">\n            <NavBar navHovered={navHovered} setPageAndClear={setPageAndClear} setNavHovered={setNavHovered} />\n            <Form inline>\n              <FormControl\n                onKeyPress={(e: any) => {\n                  if ([e.keyCode, e.which].includes(13)) {\n                    e.preventDefault();\n\n                    if (matches.length > 0) {\n                      const match = matches[0];\n                      const { anchor } = match;\n\n                      setPageAndClear(anchor);\n                      window.location.href = `#${anchor}`;\n                    }\n                  }\n                }}\n                onChange={(e) => {\n                  const input = e.target.value;\n                  const inputLowercase = input.toLowerCase();\n                  setSearch(input);\n\n                  const newMatches: SearchMatch[] = [];\n\n                  const { length } = input;\n\n                  if (length > 0) {\n                    const mappingArray = length >= 2 ? mapping : mappingPhoneme;\n                    mappingArray.forEach((mappingElement: Search) => {\n                      const { anchor, title, keywords } = mappingElement;\n\n                      const matchKey = keywords.find((k: string) => k.toLowerCase().includes(inputLowercase));\n\n                      if (matchKey) {\n                        newMatches.push({ keyword: matchKey, anchor, title });\n                      }\n                    });\n\n                    const sortedNewMatches = newMatches.sort((a, b) => {\n                      const { keyword: aKeyword } = a;\n                      const { keyword: bKeyword } = b;\n\n                      return aKeyword.length - bKeyword.length;\n                    });\n\n                    const uniqNewMatches = uniqBy(sortedNewMatches, (m) => m.title);\n                    setMatches(uniqNewMatches);\n                  } else {\n                    setMatches([]);\n                  }\n                }}\n                type=\"text\"\n                placeholder=\"Search\"\n                className=\"mr-sm-2\"\n                value={search}\n              />\n            </Form>\n          </Navbar>\n        )}\n\n        <div className=\"body\">\n          {renderMatches()}\n          <Breadcrumbs indexCarousel={indexCarousel} page={page} />\n          {renderBody()}\n        </div>\n        <Footer />\n      </div>\n    </HelmetProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}